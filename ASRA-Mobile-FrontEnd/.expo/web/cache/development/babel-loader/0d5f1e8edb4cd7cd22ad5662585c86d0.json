{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useIMGNormalizedSource;\n\nvar _react = require(\"react\");\n\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\n\nfunction useIMGNormalizedSource(_ref) {\n  var source = _ref.source,\n      specifiedDimensions = _ref.specifiedDimensions;\n  var cachedDimensions = (0, _react.useRef)(specifiedDimensions);\n\n  var _ref2 = (0, _SharedPropsProvider.useSharedProps)(),\n      provideEmbeddedHeaders = _ref2.provideEmbeddedHeaders;\n\n  return (0, _react.useMemo)(function () {\n    if (source.uri && typeof provideEmbeddedHeaders === 'function') {\n      var _cachedDimensions$cur, _cachedDimensions$cur2;\n\n      var headers = provideEmbeddedHeaders(source.uri, 'img', {\n        printWidth: ((_cachedDimensions$cur = cachedDimensions.current) === null || _cachedDimensions$cur === void 0 ? void 0 : _cachedDimensions$cur.width) || undefined,\n        printHeight: ((_cachedDimensions$cur2 = cachedDimensions.current) === null || _cachedDimensions$cur2 === void 0 ? void 0 : _cachedDimensions$cur2.height) || undefined\n      });\n\n      if (headers) {\n        return _objectSpread({\n          headers: headers\n        }, source);\n      }\n    }\n\n    return source;\n  }, [provideEmbeddedHeaders, source]);\n}","map":{"version":3,"sources":["useIMGNormalizedSource.ts"],"names":["specifiedDimensions","cachedDimensions","provideEmbeddedHeaders","source","headers","printWidth","printHeight","undefined"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,kCAAA;;AAMe,SAAA,sBAAA,OAKZ;EAAA,IAL4C,MAK5C,QAL4C,MAK5C;EAAA,IAHDA,mBAGC,QAHDA,mBAGC;EACD,IAAMC,gBAAgB,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAAzB,mBAAyB,CAAzB;;EACA,YAAmC,CAAA,GAAA,oBAAA,CAAnC,cAAmC,GAAnC;EAAA,IAAQC,sBAAR,SAAQA,sBAAR;;EACA,OAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAQ,YAAM;IACnB,IAAIC,MAAM,CAANA,GAAAA,IAAc,OAAA,sBAAA,KAAlB,UAAA,EAAgE;MAAA,IAAA,qBAAA,EAAA,sBAAA;;MAC9D,IAAMC,OAAO,GAAGF,sBAAsB,CAACC,MAAM,CAAP,GAAA,EAAA,KAAA,EAAoB;QACxDE,UAAU,EAAE,CAAA,CAAA,qBAAA,GAAA,gBAAgB,CAAhB,OAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAA,KAAA,KAD4C,SAAA;QAExDC,WAAW,EAAE,CAAA,CAAA,sBAAA,GAAA,gBAAgB,CAAhB,OAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAA,MAAA,KAAoCC;MAFO,CAApB,CAAtC;;MAIA,IAAA,OAAA,EAAa;QACX;UACEH,OADK,EACLA;QADF,GAEKD,MAFL;MAID;IACF;;IACD,OAAA,MAAA;EAbK,CAAA,EAcJ,CAAA,sBAAA,EAdH,MAcG,CAdI,CAAP;AAeD","sourcesContent":["import { useMemo, useRef } from 'react';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport {\n  IncompleteImageDimensions,\n  UseIMGElementStateProps\n} from './img-types';\n\nexport default function useIMGNormalizedSource({\n  source,\n  specifiedDimensions\n}: Pick<UseIMGElementStateProps, 'source'> & {\n  specifiedDimensions: IncompleteImageDimensions;\n}) {\n  const cachedDimensions = useRef(specifiedDimensions);\n  const { provideEmbeddedHeaders } = useSharedProps();\n  return useMemo(() => {\n    if (source.uri && typeof provideEmbeddedHeaders === 'function') {\n      const headers = provideEmbeddedHeaders(source.uri, 'img', {\n        printWidth: cachedDimensions.current?.width || undefined,\n        printHeight: cachedDimensions.current?.height || undefined\n      });\n      if (headers) {\n        return {\n          headers,\n          ...source\n        };\n      }\n    }\n    return source;\n  }, [provideEmbeddedHeaders, source]);\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useCallback } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport moment from \"moment\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { getMyRoomsTenant } from \"../../../api/room\";\nimport { COLORS, TABS } from \"../../../constants\";\nimport NoDataSVG from \"../../../assets/svg/no-data/no-data.svg\";\nimport FocusedStatusBar from \"../../../components/layout/focused-status-bar/FocusedStatusBar\";\nimport RoomCard from \"./RoomCard\";\nimport Header from \"../../../components/layout/header/Header\";\nimport Loading from \"../../../components/loading/Loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction MyRooms(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myRoomsTenant = _useState2[0],\n      setMyRoomsTenant = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useFocusEffect(useCallback(function () {\n    var dataReq = {\n      id: \"0\",\n      page: 1\n    };\n    setLoading(true);\n    getMyRoomsTenant(dataReq).then(function (res) {\n      var numArr = [];\n      var originData = res == null ? void 0 : res.rooms.reverse();\n      res == null ? void 0 : res.rooms.map(function (room) {\n        return room == null ? void 0 : room.title;\n      }).filter(function (title, i, rooms) {\n        if (rooms.indexOf(title) !== i) {\n          numArr.push(i);\n        }\n\n        return rooms.indexOf(title) !== i;\n      });\n      numArr == null ? void 0 : numArr.map(function (i) {\n        if (i > -1) {\n          originData.splice(i, 1);\n        }\n      });\n      setMyRoomsTenant(originData);\n      setLoading(false);\n    });\n  }, []));\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.background\n    },\n    children: [_jsx(FocusedStatusBar, {\n      backgroundColor: COLORS.primary\n    }), _jsx(Header, {\n      title: TABS.myRooms,\n      navigation: navigation\n    }), loading ? _jsx(Loading, {}) : _jsx(FlatList, {\n      maxToRenderPerBatch: 10,\n      updateCellsBatchingPeriod: 50,\n      data: myRoomsTenant,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"RoomDetail\", {\n              roomId: item == null ? void 0 : item.id,\n              roomDetailId: item == null ? void 0 : item.roomDetailId,\n              roomStatus: true\n            });\n          },\n          style: {\n            marginBottom: 6\n          },\n          children: _jsx(RoomCard, {\n            navigation: navigation,\n            currentRoom: item\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      ListEmptyComponent: _jsx(View, {\n        style: {\n          paddingVertical: 260,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(NoDataSVG, {\n          height: 80,\n          width: 80\n        })\n      }),\n      style: {\n        backgroundColor: COLORS.background,\n        padding: 10\n      }\n    })]\n  });\n}\n\nexport default MyRooms;","map":{"version":3,"names":["React","useState","useCallback","moment","useFocusEffect","getMyRoomsTenant","COLORS","TABS","NoDataSVG","FocusedStatusBar","RoomCard","Header","Loading","MyRooms","props","navigation","myRoomsTenant","setMyRoomsTenant","loading","setLoading","dataReq","id","page","then","res","numArr","originData","rooms","reverse","map","room","title","filter","i","indexOf","push","splice","flex","backgroundColor","background","primary","myRooms","item","navigate","roomId","roomDetailId","roomStatus","marginBottom","paddingVertical","flexDirection","justifyContent","alignItems","padding"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/screens/manage/my-rooms/MyRooms.jsx"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { SafeAreaView, View, TouchableOpacity, FlatList } from \"react-native\";\nimport moment from \"moment\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nimport { getMyRoomsTenant } from \"../../../api/room\";\nimport { COLORS, TABS } from \"../../../constants\";\n\nimport NoDataSVG from \"../../../assets/svg/no-data/no-data.svg\";\n\nimport FocusedStatusBar from \"../../../components/layout/focused-status-bar/FocusedStatusBar\";\nimport RoomCard from \"./RoomCard\";\nimport Header from \"../../../components/layout/header/Header\";\nimport Loading from \"../../../components/loading/Loading\";\n\nfunction MyRooms(props) {\n  const { navigation } = props;\n  const [myRoomsTenant, setMyRoomsTenant] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useFocusEffect(\n    useCallback(() => {\n      let dataReq = {\n        id: \"0\",\n        page: 1,\n      };\n      setLoading(true);\n      getMyRoomsTenant(dataReq).then((res) => {\n        let numArr = [];\n        let originData = res?.rooms.reverse();\n        res?.rooms\n          .map((room) => room?.title)\n          .filter((title, i, rooms) => {\n            if (rooms.indexOf(title) !== i) {\n              numArr.push(i);\n            }\n            return rooms.indexOf(title) !== i;\n          });\n        numArr?.map((i) => {\n          if (i > -1) {\n            originData.splice(i, 1);\n          }\n        });\n        setMyRoomsTenant(originData);\n        setLoading(false);\n      });\n    }, [])\n  );\n\n  return (\n    <SafeAreaView\n      style={{\n        flex: 1,\n        backgroundColor: COLORS.background,\n      }}\n    >\n      <FocusedStatusBar backgroundColor={COLORS.primary} />\n      <Header title={TABS.myRooms} navigation={navigation} />\n      {loading ? (\n        <Loading />\n      ) : (\n        <FlatList\n          maxToRenderPerBatch={10}\n          updateCellsBatchingPeriod={50}\n          data={myRoomsTenant}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"RoomDetail\", {\n                  roomId: item?.id,\n                  roomDetailId: item?.roomDetailId,\n                  roomStatus: true,\n                })\n              }\n              style={{\n                marginBottom: 6,\n              }}\n            >\n              <RoomCard navigation={navigation} currentRoom={item}></RoomCard>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.id}\n          ListEmptyComponent={\n            <View\n              style={{\n                paddingVertical: 260,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <NoDataSVG height={80} width={80} />\n            </View>\n          }\n          style={{ backgroundColor: COLORS.background, padding: 10 }}\n        />\n      )}\n    </SafeAreaView>\n  );\n}\n\nexport default MyRooms;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,gBAAT;AACA,SAASC,MAAT,EAAiBC,IAAjB;AAEA,OAAOC,SAAP;AAEA,OAAOC,gBAAP;AACA,OAAOC,QAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,IAAQC,UAAR,GAAuBD,KAAvB,CAAQC,UAAR;;EACA,gBAA0Cd,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOe,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAA8BhB,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOiB,OAAP;EAAA,IAAgBC,UAAhB;;EAEAf,cAAc,CACZF,WAAW,CAAC,YAAM;IAChB,IAAIkB,OAAO,GAAG;MACZC,EAAE,EAAE,GADQ;MAEZC,IAAI,EAAE;IAFM,CAAd;IAIAH,UAAU,CAAC,IAAD,CAAV;IACAd,gBAAgB,CAACe,OAAD,CAAhB,CAA0BG,IAA1B,CAA+B,UAACC,GAAD,EAAS;MACtC,IAAIC,MAAM,GAAG,EAAb;MACA,IAAIC,UAAU,GAAGF,GAAH,oBAAGA,GAAG,CAAEG,KAAL,CAAWC,OAAX,EAAjB;MACAJ,GAAG,QAAH,YAAAA,GAAG,CAAEG,KAAL,CACGE,GADH,CACO,UAACC,IAAD;QAAA,OAAUA,IAAV,oBAAUA,IAAI,CAAEC,KAAhB;MAAA,CADP,EAEGC,MAFH,CAEU,UAACD,KAAD,EAAQE,CAAR,EAAWN,KAAX,EAAqB;QAC3B,IAAIA,KAAK,CAACO,OAAN,CAAcH,KAAd,MAAyBE,CAA7B,EAAgC;UAC9BR,MAAM,CAACU,IAAP,CAAYF,CAAZ;QACD;;QACD,OAAON,KAAK,CAACO,OAAN,CAAcH,KAAd,MAAyBE,CAAhC;MACD,CAPH;MAQAR,MAAM,QAAN,YAAAA,MAAM,CAAEI,GAAR,CAAY,UAACI,CAAD,EAAO;QACjB,IAAIA,CAAC,GAAG,CAAC,CAAT,EAAY;UACVP,UAAU,CAACU,MAAX,CAAkBH,CAAlB,EAAqB,CAArB;QACD;MACF,CAJD;MAKAhB,gBAAgB,CAACS,UAAD,CAAhB;MACAP,UAAU,CAAC,KAAD,CAAV;IACD,CAlBD;EAmBD,CAzBU,EAyBR,EAzBQ,CADC,CAAd;EA6BA,OACE,MAAC,YAAD;IACE,KAAK,EAAE;MACLkB,IAAI,EAAE,CADD;MAELC,eAAe,EAAEhC,MAAM,CAACiC;IAFnB,CADT;IAAA,WAME,KAAC,gBAAD;MAAkB,eAAe,EAAEjC,MAAM,CAACkC;IAA1C,EANF,EAOE,KAAC,MAAD;MAAQ,KAAK,EAAEjC,IAAI,CAACkC,OAApB;MAA6B,UAAU,EAAE1B;IAAzC,EAPF,EAQGG,OAAO,GACN,KAAC,OAAD,KADM,GAGN,KAAC,QAAD;MACE,mBAAmB,EAAE,EADvB;MAEE,yBAAyB,EAAE,EAF7B;MAGE,IAAI,EAAEF,aAHR;MAIE,UAAU,EAAE;QAAA,IAAG0B,IAAH,QAAGA,IAAH;QAAA,OACV,KAAC,gBAAD;UACE,OAAO,EAAE;YAAA,OACP3B,UAAU,CAAC4B,QAAX,CAAoB,YAApB,EAAkC;cAChCC,MAAM,EAAEF,IAAF,oBAAEA,IAAI,CAAErB,EADkB;cAEhCwB,YAAY,EAAEH,IAAF,oBAAEA,IAAI,CAAEG,YAFY;cAGhCC,UAAU,EAAE;YAHoB,CAAlC,CADO;UAAA,CADX;UAQE,KAAK,EAAE;YACLC,YAAY,EAAE;UADT,CART;UAAA,UAYE,KAAC,QAAD;YAAU,UAAU,EAAEhC,UAAtB;YAAkC,WAAW,EAAE2B;UAA/C;QAZF,EADU;MAAA,CAJd;MAoBE,YAAY,EAAE,sBAACA,IAAD;QAAA,OAAUA,IAAI,CAACrB,EAAf;MAAA,CApBhB;MAqBE,kBAAkB,EAChB,KAAC,IAAD;QACE,KAAK,EAAE;UACL2B,eAAe,EAAE,GADZ;UAELC,aAAa,EAAE,KAFV;UAGLC,cAAc,EAAE,QAHX;UAILC,UAAU,EAAE;QAJP,CADT;QAAA,UAQE,KAAC,SAAD;UAAW,MAAM,EAAE,EAAnB;UAAuB,KAAK,EAAE;QAA9B;MARF,EAtBJ;MAiCE,KAAK,EAAE;QAAEb,eAAe,EAAEhC,MAAM,CAACiC,UAA1B;QAAsCa,OAAO,EAAE;MAA/C;IAjCT,EAXJ;EAAA,EADF;AAkDD;;AAED,eAAevC,OAAf"},"metadata":{},"sourceType":"module"}
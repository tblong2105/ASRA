{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport locationJSON from \"../dummy/location.json\";\nimport { LOCATION } from \"../constants\";\nexport var initLocation = function _callee() {\n  var location, locationData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          location = [];\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(LOCATION));\n\n        case 3:\n          locationData = _context.sent;\n\n          if (locationData) {\n            _context.next = 8;\n            break;\n          }\n\n          locationJSON.map(function (city) {\n            city.districts.map(function (district) {\n              district.wards.map(function (ward) {\n                if (!location.includes(city.name)) {\n                  location.push(city.name);\n                }\n\n                if (!location.includes(district.name + \", \" + city.name)) {\n                  location.push(district.name + \", \" + city.name);\n                }\n\n                location.push(ward.name + \", \" + district.name + \", \" + city.name);\n              });\n            });\n          });\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(LOCATION, JSON.stringify(location)));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"names":["AsyncStorage","locationJSON","LOCATION","initLocation","location","getItem","locationData","map","city","districts","district","wards","ward","includes","name","push","setItem","JSON","stringify"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/utils/local-storage-util.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport locationJSON from \"../dummy/location.json\";\nimport { LOCATION } from \"../constants\";\n\nexport const initLocation = async () => {\n  let location = [];\n  let locationData = await AsyncStorage.getItem(LOCATION);\n  if (!locationData) {\n    locationJSON.map((city) => {\n      city.districts.map((district) => {\n        district.wards.map((ward) => {\n          if (!location.includes(city.name)) {\n            location.push(city.name);\n          }\n          if (!location.includes(district.name + \", \" + city.name)) {\n            location.push(district.name + \", \" + city.name);\n          }\n          location.push(ward.name + \", \" + district.name + \", \" + city.name);\n        });\n      });\n    });\n    await AsyncStorage.setItem(LOCATION, JSON.stringify(location));\n  }\n};\n"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,YAAP;AACA,SAASC,QAAT;AAEA,OAAO,IAAMC,YAAY,GAAG;EAAA;EAAA;IAAA;MAAA;QAAA;UACtBC,QADsB,GACX,EADW;UAAA;UAAA,iCAEDJ,YAAY,CAACK,OAAb,CAAqBH,QAArB,CAFC;;QAAA;UAEtBI,YAFsB;;UAAA,IAGrBA,YAHqB;YAAA;YAAA;UAAA;;UAIxBL,YAAY,CAACM,GAAb,CAAiB,UAACC,IAAD,EAAU;YACzBA,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAmB,UAACG,QAAD,EAAc;cAC/BA,QAAQ,CAACC,KAAT,CAAeJ,GAAf,CAAmB,UAACK,IAAD,EAAU;gBAC3B,IAAI,CAACR,QAAQ,CAACS,QAAT,CAAkBL,IAAI,CAACM,IAAvB,CAAL,EAAmC;kBACjCV,QAAQ,CAACW,IAAT,CAAcP,IAAI,CAACM,IAAnB;gBACD;;gBACD,IAAI,CAACV,QAAQ,CAACS,QAAT,CAAkBH,QAAQ,CAACI,IAAT,GAAgB,IAAhB,GAAuBN,IAAI,CAACM,IAA9C,CAAL,EAA0D;kBACxDV,QAAQ,CAACW,IAAT,CAAcL,QAAQ,CAACI,IAAT,GAAgB,IAAhB,GAAuBN,IAAI,CAACM,IAA1C;gBACD;;gBACDV,QAAQ,CAACW,IAAT,CAAcH,IAAI,CAACE,IAAL,GAAY,IAAZ,GAAmBJ,QAAQ,CAACI,IAA5B,GAAmC,IAAnC,GAA0CN,IAAI,CAACM,IAA7D;cACD,CARD;YASD,CAVD;UAWD,CAZD;UAJwB;UAAA,iCAiBlBd,YAAY,CAACgB,OAAb,CAAqBd,QAArB,EAA+Be,IAAI,CAACC,SAAL,CAAed,QAAf,CAA/B,CAjBkB;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAArB"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport { AuthContext } from \"../components/permission/AuthProvider\";\nimport AuthStack from \"./AuthStack\";\nimport AppStack from \"./AppStack\";\nimport Notification from \"../components/notification/Notification\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction AppNav() {\n  var _useContext = useContext(AuthContext),\n      token = _useContext.token,\n      isLoading = _useContext.isLoading;\n\n  var theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      background: \"transparent\"\n    })\n  });\n\n  var _useFonts = useFonts({\n    InterBold: require(\"../assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"../assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"../assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"../assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"../assets/fonts/Inter-Light.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) return null;\n\n  if (isLoading) {\n    _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: token ? _jsxs(_Fragment, {\n      children: [_jsx(Notification, {}), _jsx(AppStack, {})]\n    }) : _jsx(AuthStack, {})\n  });\n}\n\nexport default AppNav;","map":{"version":3,"names":["React","useContext","NavigationContainer","DefaultTheme","useFonts","AuthContext","AuthStack","AppStack","Notification","AppNav","token","isLoading","theme","colors","background","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","loaded","flex","justifyContent","alignItems"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/navigation/AppNav.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { View, ActivityIndicator } from \"react-native\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport { AuthContext } from \"../components/permission/AuthProvider\";\n\nimport AuthStack from \"./AuthStack\";\nimport AppStack from \"./AppStack\";\nimport Notification from \"../components/notification/Notification\";\nfunction AppNav() {\n  const { token, isLoading } = useContext(AuthContext);\n  const theme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme.colors,\n      background: \"transparent\",\n    },\n  };\n\n  const [loaded] = useFonts({\n    InterBold: require(\"../assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"../assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"../assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"../assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"../assets/fonts/Inter-Light.ttf\"),\n  });\n\n  if (!loaded) return null;\n\n  if (isLoading) {\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      <ActivityIndicator size=\"large\" />\n    </View>;\n  }\n\n  return (\n    <NavigationContainer theme={theme}>\n      {token ? (\n        <>\n          <Notification />\n          <AppStack />\n        </>\n      ) : (\n        <AuthStack />\n      )}\n    </NavigationContainer>\n  );\n}\n\nexport default AppNav;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,WAAT;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;;;;;AACA,SAASC,MAAT,GAAkB;EAChB,kBAA6BR,UAAU,CAACI,WAAD,CAAvC;EAAA,IAAQK,KAAR,eAAQA,KAAR;EAAA,IAAeC,SAAf,eAAeA,SAAf;;EACA,IAAMC,KAAK,mCACNT,YADM;IAETU,MAAM,kCACDV,YAAY,CAACU,MADZ;MAEJC,UAAU,EAAE;IAFR;EAFG,EAAX;;EAQA,gBAAiBV,QAAQ,CAAC;IACxBW,SAAS,EAAEC,OAAO,kCADM;IAExBC,aAAa,EAAED,OAAO,sCAFE;IAGxBE,WAAW,EAAEF,OAAO,oCAHI;IAIxBG,YAAY,EAAEH,OAAO,qCAJG;IAKxBI,UAAU,EAAEJ,OAAO;EALK,CAAD,CAAzB;EAAA;EAAA,IAAOK,MAAP;;EAQA,IAAI,CAACA,MAAL,EAAa,OAAO,IAAP;;EAEb,IAAIV,SAAJ,EAAe;IACb,KAAC,IAAD;MAAM,KAAK,EAAE;QAAEW,IAAI,EAAE,CAAR;QAAWC,cAAc,EAAE,QAA3B;QAAqCC,UAAU,EAAE;MAAjD,CAAb;MAAA,UACE,KAAC,iBAAD;QAAmB,IAAI,EAAC;MAAxB;IADF;EAGD;;EAED,OACE,KAAC,mBAAD;IAAqB,KAAK,EAAEZ,KAA5B;IAAA,UACGF,KAAK,GACJ;MAAA,WACE,KAAC,YAAD,KADF,EAEE,KAAC,QAAD,KAFF;IAAA,EADI,GAMJ,KAAC,SAAD;EAPJ,EADF;AAYD;;AAED,eAAeD,MAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.TDefaultTextRenderer = exports.TDefaultPhrasingRenderer = exports.TDefaultBlockRenderer = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _SharedPropsProvider = require(\"./context/SharedPropsProvider\");\n\nvar _useAssembledCommonProps = _interopRequireDefault(require(\"./hooks/useAssembledCommonProps\"));\n\nvar _TChildrenRendererContext = require(\"./context/TChildrenRendererContext\");\n\nvar _renderTextualContent = _interopRequireDefault(require(\"./renderTextualContent\"));\n\nvar _RenderRegistryProvider = require(\"./context/RenderRegistryProvider\");\n\nvar _renderBlockContent = _interopRequireDefault(require(\"./renderBlockContent\"));\n\nvar _renderEmptyContent = _interopRequireDefault(require(\"./renderEmptyContent\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar TDefaultBlockRenderer = _renderBlockContent.default.bind(null);\n\nexports.TDefaultBlockRenderer = TDefaultBlockRenderer;\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nvar TDefaultPhrasingRenderer = _renderTextualContent.default.bind(null);\n\nexports.TDefaultPhrasingRenderer = TDefaultPhrasingRenderer;\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nvar TDefaultTextRenderer = _renderTextualContent.default.bind(null);\n\nexports.TDefaultTextRenderer = TDefaultTextRenderer;\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode) {\n  return tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ') || tnode.type === 'empty';\n}\n\nvar TNodeRenderer = (0, _react.memo)(function MemoizedTNodeRenderer(props) {\n  var tnode = props.tnode;\n  var sharedProps = (0, _SharedPropsProvider.useSharedProps)();\n  var renderRegistry = (0, _RenderRegistryProvider.useRendererRegistry)();\n  var TNodeChildrenRenderer = (0, _TChildrenRendererContext.useTNodeChildrenRenderer)();\n\n  var tnodeProps = _objectSpread(_objectSpread({}, props), {}, {\n    TNodeChildrenRenderer: TNodeChildrenRenderer,\n    sharedProps: sharedProps\n  });\n\n  var renderer = tnode.type === 'block' || tnode.type === 'document' ? TDefaultBlockRenderer : tnode.type === 'text' ? TDefaultTextRenderer : tnode.type === 'phrasing' ? TDefaultPhrasingRenderer : _renderEmptyContent.default;\n\n  var _ref = (0, _useAssembledCommonProps.default)(tnodeProps, renderer),\n      assembledProps = _ref.assembledProps,\n      Renderer = _ref.Renderer;\n\n  switch (tnode.type) {\n    case 'empty':\n      return (0, _renderEmptyContent.default)(assembledProps);\n\n    case 'text':\n      var InternalTextRenderer = renderRegistry.getInternalTextRenderer(props.tnode.tagName);\n\n      if (InternalTextRenderer) {\n        return _react.default.createElement(InternalTextRenderer, tnodeProps);\n      }\n\n      if (tnodeProps.tnode.data === '' && tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention) {\n        return null;\n      }\n\n      break;\n\n    case 'phrasing':\n      if (tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes && tnodeProps.tnode.tagName == null && tnodeProps.tnode.children.length <= 1) {\n        return _react.default.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n\n      if (tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention && tnodeProps.tnode.tagName == null && tnodeProps.tnode.children.every(isGhostTNode)) {\n        return null;\n      }\n\n      break;\n  }\n\n  var renderFn = tnode.type === 'block' || tnode.type === 'document' ? _renderBlockContent.default : _renderTextualContent.default;\n  return Renderer === null ? renderFn(assembledProps) : _react.default.createElement(Renderer, assembledProps);\n});\nvar defaultProps = {\n  propsFromParent: {\n    collapsedMarginTop: null\n  }\n};\nTNodeRenderer.defaultProps = defaultProps;\nvar _default = TNodeRenderer;\nexports.default = _default;","map":{"version":3,"sources":["TNodeRenderer.tsx"],"names":["TDefaultBlockRenderer","renderBlockContent","TDefaultPhrasingRenderer","renderTextualContent","TDefaultTextRenderer","tnode","TNodeRenderer","sharedProps","renderRegistry","TNodeChildrenRenderer","tnodeProps","renderer","renderEmptyContent","Renderer","InternalTextRenderer","props","React","renderFn","defaultProps","propsFromParent","collapsedMarginTop"],"mappings":"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","sourcesContent":["import React, { memo, ReactElement } from 'react';\nimport { TDefaultRenderer, TNodeRendererProps } from './shared-types';\nimport { useSharedProps } from './context/SharedPropsProvider';\nimport {\n  TText,\n  TBlock,\n  TNode,\n  TPhrasing\n} from '@native-html/transient-render-engine';\nimport useAssembledCommonProps from './hooks/useAssembledCommonProps';\nimport { useTNodeChildrenRenderer } from './context/TChildrenRendererContext';\nimport renderTextualContent from './renderTextualContent';\nimport { useRendererRegistry } from './context/RenderRegistryProvider';\nimport renderBlockContent from './renderBlockContent';\nimport renderEmptyContent from './renderEmptyContent';\n\nexport type { TNodeRendererProps } from './shared-types';\n\nconst TDefaultBlockRenderer: TDefaultRenderer<TBlock> =\n  renderBlockContent.bind(null);\n\nTDefaultBlockRenderer.displayName = 'TDefaultBlockRenderer';\n\nconst TDefaultPhrasingRenderer: TDefaultRenderer<TPhrasing> =\n  renderTextualContent.bind(null);\n\nTDefaultPhrasingRenderer.displayName = 'TDefaultPhrasingRenderer';\n\nconst TDefaultTextRenderer: TDefaultRenderer<TText> =\n  renderTextualContent.bind(null);\n\nTDefaultTextRenderer.displayName = 'TDefaultTextRenderer';\n\nfunction isGhostTNode(tnode: TNode) {\n  return (\n    (tnode.type === 'text' && (tnode.data === '' || tnode.data === ' ')) ||\n    tnode.type === 'empty'\n  );\n}\n\n/**\n * A component to render any {@link TNode}.\n */\nconst TNodeRenderer = memo(function MemoizedTNodeRenderer(\n  props: TNodeRendererProps<any>\n): ReactElement | null {\n  const { tnode } = props;\n  const sharedProps = useSharedProps();\n  const renderRegistry = useRendererRegistry();\n  const TNodeChildrenRenderer = useTNodeChildrenRenderer();\n  const tnodeProps = {\n    ...props,\n    TNodeChildrenRenderer,\n    sharedProps\n  };\n  const renderer =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? TDefaultBlockRenderer\n      : tnode.type === 'text'\n      ? TDefaultTextRenderer\n      : tnode.type === 'phrasing'\n      ? TDefaultPhrasingRenderer\n      : renderEmptyContent;\n\n  const { assembledProps, Renderer } = useAssembledCommonProps(\n    tnodeProps,\n    renderer as any\n  );\n  switch (tnode.type) {\n    case 'empty':\n      return renderEmptyContent(assembledProps);\n    case 'text':\n      const InternalTextRenderer = renderRegistry.getInternalTextRenderer(\n        props.tnode.tagName\n      );\n\n      if (InternalTextRenderer) {\n        return React.createElement(InternalTextRenderer, tnodeProps);\n      }\n      // If ghost line prevention is enabled and the text data is empty, render\n      // nothing to avoid React Native painting a 20px height line.\n      // See also https://git.io/JErwX\n      if (\n        tnodeProps.tnode.data === '' &&\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention\n      ) {\n        return null;\n      }\n      break;\n    case 'phrasing':\n      // When a TPhrasing node is anonymous and has only one child, its\n      // rendering amounts to rendering its only child.\n      if (\n        tnodeProps.sharedProps.bypassAnonymousTPhrasingNodes &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.length <= 1\n      ) {\n        return React.createElement(TNodeChildrenRenderer, {\n          tnode: props.tnode\n        });\n      }\n      // If ghost line prevention is enabled and the tnode is an anonymous empty\n      // phrasing node, render nothing to avoid React Native painting a 20px\n      // height line. See also https://git.io/JErwX\n      if (\n        tnodeProps.sharedProps.enableExperimentalGhostLinesPrevention &&\n        tnodeProps.tnode.tagName == null &&\n        tnodeProps.tnode.children.every(isGhostTNode)\n      ) {\n        return null;\n      }\n      break;\n  }\n  const renderFn =\n    tnode.type === 'block' || tnode.type === 'document'\n      ? renderBlockContent\n      : renderTextualContent;\n  return Renderer === null\n    ? renderFn(assembledProps)\n    : React.createElement(Renderer as any, assembledProps);\n});\n\nconst defaultProps: Required<Pick<TNodeRendererProps<any>, 'propsFromParent'>> =\n  {\n    propsFromParent: {\n      collapsedMarginTop: null\n    }\n  };\n\n// @ts-expect-error default props must be defined\nTNodeRenderer.defaultProps = defaultProps;\n\nexport {\n  TDefaultBlockRenderer,\n  TDefaultPhrasingRenderer,\n  TDefaultTextRenderer\n};\n\nexport default TNodeRenderer;\n"]},"metadata":{},"sourceType":"script"}
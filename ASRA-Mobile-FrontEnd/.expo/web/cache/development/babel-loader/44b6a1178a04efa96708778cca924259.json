{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useIMGElementState = _interopRequireDefault(require(\"./useIMGElementState\"));\n\nvar _IMGElementContentSuccess = _interopRequireDefault(require(\"./IMGElementContentSuccess\"));\n\nvar _IMGElementContainer = _interopRequireDefault(require(\"./IMGElementContainer\"));\n\nvar _IMGElementContentLoading = _interopRequireDefault(require(\"./IMGElementContentLoading\"));\n\nvar _IMGElementContentError = _interopRequireDefault(require(\"./IMGElementContentError\"));\n\nvar _defaultInitialImageDimensions = _interopRequireDefault(require(\"./defaultInitialImageDimensions\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction identity(arg) {\n  return arg;\n}\n\nfunction IMGElement(props) {\n  var state = (0, _useIMGElementState.default)(props);\n  var content;\n\n  if (state.type === 'success') {\n    content = _react.default.createElement(_IMGElementContentSuccess.default, state);\n  } else if (state.type === 'loading') {\n    content = _react.default.createElement(_IMGElementContentLoading.default, state);\n  } else {\n    content = _react.default.createElement(_IMGElementContentError.default, state);\n  }\n\n  return _react.default.createElement(_IMGElementContainer.default, _extends({\n    testID: props.testID\n  }, props.containerProps, {\n    onPress: props.onPress,\n    style: state.containerStyle\n  }), content);\n}\n\nvar imgDimensionsType = _propTypes.default.shape({\n  width: _propTypes.default.number,\n  height: _propTypes.default.number\n});\n\nvar propTypes = {\n  source: _propTypes.default.object.isRequired,\n  alt: _propTypes.default.string,\n  altColor: _propTypes.default.string,\n  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n  style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  computeMaxWidth: _propTypes.default.func.isRequired,\n  contentWidth: _propTypes.default.number,\n  enableExperimentalPercentWidth: _propTypes.default.bool,\n  initialDimensions: imgDimensionsType,\n  onPress: _propTypes.default.func,\n  testID: _propTypes.default.string,\n  objectFit: _propTypes.default.string,\n  cachedNaturalDimensions: imgDimensionsType,\n  containerProps: _propTypes.default.object\n};\nIMGElement.propTypes = propTypes;\nIMGElement.defaultProps = {\n  enableExperimentalPercentWidth: false,\n  computeMaxWidth: identity,\n  imagesInitialDimensions: _defaultInitialImageDimensions.default,\n  style: {}\n};\nvar _default = IMGElement;\nexports.default = _default;","map":{"version":3,"sources":["IMGElement.tsx"],"names":["state","content","React","IMGElementContentSuccess","IMGElementContentLoading","IMGElementContentError","props","testID","containerStyle","imgDimensionsType","width","PropTypes","height","number","propTypes","source","alt","altColor","style","computeMaxWidth","contentWidth","enableExperimentalPercentWidth","initialDimensions","onPress","objectFit","cachedNaturalDimensions","containerProps","object","IMGElement","imagesInitialDimensions","defaultImageInitialDimensions"],"mappings":"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","sourcesContent":["import React, { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport useIMGElementState from './useIMGElementState';\nimport IMGElementContentSuccess from './IMGElementContentSuccess';\nimport IMGElementContainer from './IMGElementContainer';\nimport IMGElementContentLoading from './IMGElementContentLoading';\nimport IMGElementContentError from './IMGElementContentError';\nimport type { IMGElementProps } from './img-types';\nimport defaultImageInitialDimensions from './defaultInitialImageDimensions';\n\nexport type { IMGElementProps } from './img-types';\n\nfunction identity(arg: any) {\n  return arg;\n}\n\n/**\n * A component to render images based on an internal loading state.\n *\n * @remarks This component will attempt to draw a box of paint dimensions\n * before retrieving the physical dimensions of the image to avoid layout\n * shifts. See also {@link useIMGElementState}, {@link IMGElementContainer},\n * {@link IMGElementContentSuccess}, {@link IMGElementContentLoading}\n * and {@link IMGElementContentError} for customization.\n */\nfunction IMGElement(props: IMGElementProps): ReactElement {\n  const state = useIMGElementState(props);\n  let content: ReactNode;\n  if (state.type === 'success') {\n    content = React.createElement(IMGElementContentSuccess, state);\n  } else if (state.type === 'loading') {\n    content = React.createElement(IMGElementContentLoading, state);\n  } else {\n    content = React.createElement(IMGElementContentError, state);\n  }\n  return (\n    <IMGElementContainer\n      testID={props.testID}\n      {...props.containerProps}\n      onPress={props.onPress}\n      style={state.containerStyle}>\n      {content}\n    </IMGElementContainer>\n  );\n}\n\nconst imgDimensionsType = PropTypes.shape({\n  width: PropTypes.number,\n  height: PropTypes.number\n});\n\nconst propTypes: Record<keyof IMGElementProps, any> = {\n  source: PropTypes.object.isRequired,\n  alt: PropTypes.string,\n  altColor: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  computeMaxWidth: PropTypes.func.isRequired,\n  contentWidth: PropTypes.number,\n  enableExperimentalPercentWidth: PropTypes.bool,\n  initialDimensions: imgDimensionsType,\n  onPress: PropTypes.func,\n  testID: PropTypes.string,\n  objectFit: PropTypes.string,\n  cachedNaturalDimensions: imgDimensionsType,\n  containerProps: PropTypes.object\n};\n\n/**\n * @ignore\n */\nIMGElement.propTypes = propTypes;\n\n/**\n * @ignore\n */\nIMGElement.defaultProps = {\n  enableExperimentalPercentWidth: false,\n  computeMaxWidth: identity,\n  imagesInitialDimensions: defaultImageInitialDimensions,\n  style: {}\n};\n\nexport default IMGElement;\n"]},"metadata":{},"sourceType":"script"}
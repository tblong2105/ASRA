{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _pick = _interopRequireDefault(require(\"ramda/src/pick\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar extractProps = (0, _pick.default)(['resizeMode', 'tintColor', 'overlayColor']);\n\nfunction mapObjectFit(objectFit) {\n  var resizeMode;\n\n  switch (objectFit) {\n    case 'contain':\n    case 'cover':\n      resizeMode = objectFit;\n      break;\n\n    case 'fill':\n      resizeMode = 'stretch';\n      break;\n\n    case 'scale-down':\n      resizeMode = 'contain';\n      break;\n\n    default:\n      return null;\n  }\n\n  return {\n    resizeMode: resizeMode\n  };\n}\n\nfunction extractImageStyleProps(style, objectFit) {\n  var resizeModeFromFit = objectFit ? mapObjectFit(objectFit) : null;\n  return _objectSpread(_objectSpread({}, extractProps(style)), resizeModeFromFit);\n}\n\nvar _default = extractImageStyleProps;\nexports.default = _default;","map":{"version":3,"sources":["extractImageStyleProps.ts"],"names":["extractProps","resizeMode","resizeModeFromFit","objectFit","mapObjectFit","extractImageStyleProps"],"mappings":";;;;;;;;;;;;;AAGA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;;;;;;;AAEA,IAAMA,YAAY,GAAG,CAAA,GAAA,KAAA,CAAA,OAAA,EAAuB,CAAA,YAAA,EAAA,WAAA,EAA5C,cAA4C,CAAvB,CAArB;;AAMA,SAAA,YAAA,CAAA,SAAA,EAA8D;EAC5D,IAAA,UAAA;;EACA,QAAA,SAAA;IACE,KAAA,SAAA;IACA,KAAA,OAAA;MACEC,UAAU,GAAVA,SAAAA;MACA;;IACF,KAAA,MAAA;MACEA,UAAU,GAAVA,SAAAA;MACA;;IACF,KAAA,YAAA;MACEA,UAAU,GAAVA,SAAAA;MACA;;IACF;MACE,OAAA,IAAA;EAZJ;;EAcA,OAAO;IAAEA,UAAAA,EAAAA;EAAF,CAAP;AACD;;AAED,SAAA,sBAAA,CAAA,KAAA,EAAA,SAAA,EAGE;EACA,IAAMC,iBAAiB,GAAGC,SAAS,GAAGC,YAAY,CAAf,SAAe,CAAf,GAAnC,IAAA;EACA,uCACKJ,YAAY,CADV,KACU,CADjB,GAEKE,iBAFL;AAID;;eAEcG,sB","sourcesContent":["import { ImageStyle } from 'react-native';\nimport { WebBlockStyles } from '@native-html/transient-render-engine';\n\nimport pick from 'ramda/src/pick';\n\nconst extractProps = pick<keyof ImageStyle>([\n  'resizeMode',\n  'tintColor',\n  'overlayColor'\n]);\n\nfunction mapObjectFit(objectFit: WebBlockStyles['objectFit']) {\n  let resizeMode: ImageStyle['resizeMode'];\n  switch (objectFit) {\n    case 'contain':\n    case 'cover':\n      resizeMode = objectFit;\n      break;\n    case 'fill':\n      resizeMode = 'stretch';\n      break;\n    case 'scale-down':\n      resizeMode = 'contain';\n      break;\n    default:\n      return null;\n  }\n  return { resizeMode };\n}\n\nfunction extractImageStyleProps(\n  style: any,\n  objectFit?: WebBlockStyles['objectFit']\n) {\n  const resizeModeFromFit = objectFit ? mapObjectFit(objectFit) : null;\n  return {\n    ...extractProps(style),\n    ...resizeModeFromFit\n  };\n}\n\nexport default extractImageStyleProps;\n"]},"metadata":{},"sourceType":"script"}
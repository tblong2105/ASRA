{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useCallback } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { getWaitingContract } from \"../../../api/contract\";\nimport { COLORS, TABS } from \"../../../constants\";\nimport NoDataSVG from \"../../../assets/svg/no-data/no-data.svg\";\nimport FocusedStatusBar from \"../../../components/layout/focused-status-bar/FocusedStatusBar\";\nimport Header from \"../../../components/layout/header/Header\";\nimport Loading from \"../../../components/loading/Loading\";\nimport Contract from \"./Contract\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MyWaitingContract(props) {\n  var navigation = props.navigation,\n      route = props.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contracts = _useState2[0],\n      setContracts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useFocusEffect(useCallback(function () {\n    setLoading(true);\n    getWaitingContract(1).then(function (res) {\n      setContracts(res.contractVOs);\n      setLoading(false);\n    });\n  }, []));\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.background\n    },\n    children: [_jsx(FocusedStatusBar, {\n      backgroundColor: COLORS.primary\n    }), _jsx(Header, {\n      title: TABS.myWaitingContract,\n      navigation: navigation\n    }), loading ? _jsx(Loading, {}) : _jsx(FlatList, {\n      maxToRenderPerBatch: 10,\n      updateCellsBatchingPeriod: 50,\n      data: contracts,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"PreviewContract\", {\n              contractId: item.id\n            });\n          },\n          style: {\n            marginBottom: 6\n          },\n          children: _jsx(Contract, {\n            contract: item\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      ListEmptyComponent: _jsx(View, {\n        style: {\n          paddingVertical: 260,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(NoDataSVG, {\n          height: 80,\n          width: 80\n        })\n      }),\n      style: {\n        backgroundColor: COLORS.background,\n        paddingTop: 10,\n        paddingHorizontal: 16\n      }\n    })]\n  });\n}","map":{"version":3,"names":["useState","useCallback","useFocusEffect","getWaitingContract","COLORS","TABS","NoDataSVG","FocusedStatusBar","Header","Loading","Contract","MyWaitingContract","props","navigation","route","contracts","setContracts","loading","setLoading","then","res","contractVOs","flex","backgroundColor","background","primary","myWaitingContract","item","navigate","contractId","id","marginBottom","paddingVertical","flexDirection","justifyContent","alignItems","paddingTop","paddingHorizontal"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/screens/manage/my-waiting-contracts/My-Waiting-Contract.jsx"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport { SafeAreaView, View, FlatList, TouchableOpacity } from \"react-native\";\nimport { useFocusEffect } from \"@react-navigation/native\";\n\nimport { getWaitingContract } from \"../../../api/contract\";\nimport { COLORS, TABS } from \"../../../constants\";\nimport NoDataSVG from \"../../../assets/svg/no-data/no-data.svg\";\n\nimport FocusedStatusBar from \"../../../components/layout/focused-status-bar/FocusedStatusBar\";\nimport Header from \"../../../components/layout/header/Header\";\nimport Loading from \"../../../components/loading/Loading\";\nimport Contract from \"./Contract\";\n\nexport default function MyWaitingContract(props) {\n  const { navigation, route } = props;\n  const [contracts, setContracts] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useFocusEffect(\n    useCallback(() => {\n      setLoading(true);\n      getWaitingContract(1).then((res) => {\n        setContracts(res.contractVOs);\n        setLoading(false);\n      });\n    }, [])\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1, backgroundColor: COLORS.background }}>\n      <FocusedStatusBar backgroundColor={COLORS.primary} />\n\n      <Header title={TABS.myWaitingContract} navigation={navigation} />\n      {loading ? (\n        <Loading />\n      ) : (\n        <FlatList\n          maxToRenderPerBatch={10}\n          updateCellsBatchingPeriod={50}\n          data={contracts}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              onPress={() =>\n                navigation.navigate(\"PreviewContract\", { contractId: item.id })\n              }\n              style={{\n                marginBottom: 6,\n              }}\n            >\n              <Contract contract={item}></Contract>\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item) => item.id}\n          ListEmptyComponent={\n            <View\n              style={{\n                paddingVertical: 260,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <NoDataSVG height={80} width={80} />\n            </View>\n          }\n          style={{\n            backgroundColor: COLORS.background,\n            paddingTop: 10,\n            paddingHorizontal: 16,\n          }}\n        />\n      )}\n    </SafeAreaView>\n  );\n}\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;;;;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,kBAAT;AACA,SAASC,MAAT,EAAiBC,IAAjB;AACA,OAAOC,SAAP;AAEA,OAAOC,gBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;EAC/C,IAAQC,UAAR,GAA8BD,KAA9B,CAAQC,UAAR;EAAA,IAAoBC,KAApB,GAA8BF,KAA9B,CAAoBE,KAApB;;EACA,gBAAkCd,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOe,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAA8BhB,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOiB,OAAP;EAAA,IAAgBC,UAAhB;;EAEAhB,cAAc,CACZD,WAAW,CAAC,YAAM;IAChBiB,UAAU,CAAC,IAAD,CAAV;IACAf,kBAAkB,CAAC,CAAD,CAAlB,CAAsBgB,IAAtB,CAA2B,UAACC,GAAD,EAAS;MAClCJ,YAAY,CAACI,GAAG,CAACC,WAAL,CAAZ;MACAH,UAAU,CAAC,KAAD,CAAV;IACD,CAHD;EAID,CANU,EAMR,EANQ,CADC,CAAd;EAUA,OACE,MAAC,YAAD;IAAc,KAAK,EAAE;MAAEI,IAAI,EAAE,CAAR;MAAWC,eAAe,EAAEnB,MAAM,CAACoB;IAAnC,CAArB;IAAA,WACE,KAAC,gBAAD;MAAkB,eAAe,EAAEpB,MAAM,CAACqB;IAA1C,EADF,EAGE,KAAC,MAAD;MAAQ,KAAK,EAAEpB,IAAI,CAACqB,iBAApB;MAAuC,UAAU,EAAEb;IAAnD,EAHF,EAIGI,OAAO,GACN,KAAC,OAAD,KADM,GAGN,KAAC,QAAD;MACE,mBAAmB,EAAE,EADvB;MAEE,yBAAyB,EAAE,EAF7B;MAGE,IAAI,EAAEF,SAHR;MAIE,UAAU,EAAE;QAAA,IAAGY,IAAH,QAAGA,IAAH;QAAA,OACV,KAAC,gBAAD;UACE,OAAO,EAAE;YAAA,OACPd,UAAU,CAACe,QAAX,CAAoB,iBAApB,EAAuC;cAAEC,UAAU,EAAEF,IAAI,CAACG;YAAnB,CAAvC,CADO;UAAA,CADX;UAIE,KAAK,EAAE;YACLC,YAAY,EAAE;UADT,CAJT;UAAA,UAQE,KAAC,QAAD;YAAU,QAAQ,EAAEJ;UAApB;QARF,EADU;MAAA,CAJd;MAgBE,YAAY,EAAE,sBAACA,IAAD;QAAA,OAAUA,IAAI,CAACG,EAAf;MAAA,CAhBhB;MAiBE,kBAAkB,EAChB,KAAC,IAAD;QACE,KAAK,EAAE;UACLE,eAAe,EAAE,GADZ;UAELC,aAAa,EAAE,KAFV;UAGLC,cAAc,EAAE,QAHX;UAILC,UAAU,EAAE;QAJP,CADT;QAAA,UAQE,KAAC,SAAD;UAAW,MAAM,EAAE,EAAnB;UAAuB,KAAK,EAAE;QAA9B;MARF,EAlBJ;MA6BE,KAAK,EAAE;QACLZ,eAAe,EAAEnB,MAAM,CAACoB,UADnB;QAELY,UAAU,EAAE,EAFP;QAGLC,iBAAiB,EAAE;MAHd;IA7BT,EAPJ;EAAA,EADF;AA8CD"},"metadata":{},"sourceType":"module"}
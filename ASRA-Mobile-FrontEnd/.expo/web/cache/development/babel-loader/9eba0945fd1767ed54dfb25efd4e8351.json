{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport AuthStack from \"./src/navigation/AuthStack\";\nimport TabNavigator from \"./src/navigation/TabNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"transparent\"\n  })\n});\n\nfunction App() {\n  var _useFonts = useFonts({\n    InterBold: require(\"./src/assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"./src/assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"./src/assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"./src/assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"./src/assets/fonts/Inter-Light.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) return null;\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsx(AuthStack, {})\n  });\n}\n\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","DefaultTheme","useFonts","AuthStack","TabNavigator","theme","colors","background","App","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","loaded"],"sources":["/Users/sonit/Documents/react native(2022)/mobile-app-asra/App.js"],"sourcesContent":["import React from \"react\";\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { useFonts } from \"expo-font\";\nimport AuthStack from \"./src/navigation/AuthStack\";\nimport TabNavigator from \"./src/navigation/TabNavigator\";\n// import \"react-native-gesture-handler\";\nconst theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    background: \"transparent\",\n  },\n};\n\nfunction App() {\n  const [loaded] = useFonts({\n    InterBold: require(\"./src/assets/fonts/Inter-Bold.ttf\"),\n    InterSemiBold: require(\"./src/assets/fonts/Inter-SemiBold.ttf\"),\n    InterMedium: require(\"./src/assets/fonts/Inter-Medium.ttf\"),\n    InterRegular: require(\"./src/assets/fonts/Inter-Regular.ttf\"),\n    InterLight: require(\"./src/assets/fonts/Inter-Light.ttf\"),\n  });\n\n  if (!loaded) return null;\n  return (\n    <NavigationContainer theme={theme}>\n      <AuthStack />\n      {/* <TabNavigator/> */}\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,0BAAlD;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,SAAP;AACA,OAAOC,YAAP;;;AAEA,IAAMC,KAAK,mCACNJ,YADM;EAETK,MAAM,kCACDL,YAAY,CAACK,MADZ;IAEJC,UAAU,EAAE;EAFR;AAFG,EAAX;;AAQA,SAASC,GAAT,GAAe;EACb,gBAAiBN,QAAQ,CAAC;IACxBO,SAAS,EAAEC,OAAO,qCADM;IAExBC,aAAa,EAAED,OAAO,yCAFE;IAGxBE,WAAW,EAAEF,OAAO,uCAHI;IAIxBG,YAAY,EAAEH,OAAO,wCAJG;IAKxBI,UAAU,EAAEJ,OAAO;EALK,CAAD,CAAzB;EAAA;EAAA,IAAOK,MAAP;;EAQA,IAAI,CAACA,MAAL,EAAa,OAAO,IAAP;EACb,OACE,KAAC,mBAAD;IAAqB,KAAK,EAAEV,KAA5B;IAAA,UACE,KAAC,SAAD;EADF,EADF;AAMD;;AAED,eAAeG,GAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOLElementProps = useOLElementProps;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _OLElement = _interopRequireDefault(require(\"../elements/OLElement\"));\n\nvar _RenderersPropsProvider = require(\"../context/RenderersPropsProvider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getFallbackListStyleTypeFromNestLevel(nestLevel) {\n  switch (nestLevel % 3) {\n    case 0:\n      return 'decimal';\n\n    case 1:\n      return 'upper-alpha';\n\n    default:\n      return 'lower-alpha';\n  }\n}\n\nfunction useOLElementProps(props) {\n  var config = (0, _RenderersPropsProvider.useRendererProps)('ol');\n  return _objectSpread(_objectSpread({}, props), {}, {\n    getFallbackListStyleTypeFromNestLevel: getFallbackListStyleTypeFromNestLevel\n  }, config);\n}\n\nvar OLRenderer = function OLRenderer(props) {\n  return _react.default.createElement(_OLElement.default, useOLElementProps(props));\n};\n\nvar _default = OLRenderer;\nexports.default = _default;","map":{"version":3,"sources":["OLRenderer.tsx"],"names":["nestLevel","config","getFallbackListStyleTypeFromNestLevel","OLRenderer","props","React","OLElement","useOLElementProps"],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAOA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,qCAAA;;;;;;;;AAEA,SAAA,qCAAA,CAAA,SAAA,EAEiC;EAC/B,QAAQA,SAAS,GAAjB,CAAA;IACE,KAAA,CAAA;MACE,OAAA,SAAA;;IAGF,KAAA,CAAA;MACE,OAAA,aAAA;;IAGF;MACE,OAAA,aAAA;EAVJ;AAYD;;AAEM,SAAA,iBAAA,CAAA,KAAA,EAEW;EAChB,IAAMC,MAAM,GAAG,CAAA,GAAA,uBAAA,CAAA,gBAAA,EAAf,IAAe,CAAf;EACA,uCAAO,KAAP;IAEEC,qCAFK,EAELA;EAFF,GAGKD,MAHL;AAKD;;AAED,IAAME,UAAiC,GAAIC,SAArCD,UAAqCC,CAAAA,KAAD,EAAW;EACnD,OAAOC,MAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CAAoBC,UAAAA,CAApBD,OAAAA,EAA+BE,iBAAiB,CAAvD,KAAuD,CAAhDF,CAAP;AADF,CAAA;;eAIeF,U","sourcesContent":["import React from 'react';\nimport { TBlock } from '@native-html/transient-render-engine';\nimport { InternalBlockRenderer } from '../render/render-types';\nimport {\n  InternalRendererProps,\n  DefaultSupportedListStyleType\n} from '../shared-types';\nimport OLElement, { OLElementProps } from '../elements/OLElement';\nimport { useRendererProps } from '../context/RenderersPropsProvider';\n\nfunction getFallbackListStyleTypeFromNestLevel(\n  nestLevel: number\n): DefaultSupportedListStyleType {\n  switch (nestLevel % 3) {\n    case 0:\n      return 'decimal';\n\n    /* istanbul ignore next */\n    case 1:\n      return 'upper-alpha';\n\n    /* istanbul ignore next */\n    default:\n      return 'lower-alpha';\n  }\n}\n\nexport function useOLElementProps(\n  props: InternalRendererProps<TBlock>\n): OLElementProps {\n  const config = useRendererProps('ol');\n  return {\n    ...props,\n    getFallbackListStyleTypeFromNestLevel,\n    ...config\n  };\n}\n\nconst OLRenderer: InternalBlockRenderer = (props) => {\n  return React.createElement(OLElement, useOLElementProps(props));\n};\n\nexport default OLRenderer;\n"]},"metadata":{},"sourceType":"script"}
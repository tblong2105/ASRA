{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport VirtualizedList from \"react-native-web/dist/exports/VirtualizedList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLORS, FONTS } from \"../../constants\";\nimport { diffBetweenDate } from \"../../utils/date-util\";\nimport { getNotifications, readNotification } from \"../../api/socket\";\nimport NoDataSVG from \"../../assets/svg/no-data/no-data.svg\";\nimport Loading from \"../../components/loading/Loading\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Notification(props) {\n  var navigation = props.navigation,\n      route = props.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notificationList = _useState2[0],\n      setNotificationList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var getNotificationList = function _callee() {\n    var isMounted;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isMounted = true;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\").then(function (userInfoData) {\n              if (isMounted) {\n                var userInfo = JSON.parse(userInfoData);\n                setLoading(true);\n                getNotifications(userInfo == null ? void 0 : userInfo.username).then(function (res) {\n                  var _res$data;\n\n                  setNotificationList(res == null ? void 0 : (_res$data = res.data) == null ? void 0 : _res$data.notificationList);\n                  setLoading(false);\n                });\n              }\n            }));\n\n          case 3:\n            return _context.abrupt(\"return\", function () {\n              isMounted = false;\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pressNotificationDetail = function pressNotificationDetail(notificationId) {\n    var dataReq = {\n      notificationId: notificationId\n    };\n    var originNotificationData = notificationList.map(function (notification) {\n      if (notificationId === (notification == null ? void 0 : notification.id)) {\n        readNotification(dataReq).then(function (res) {}).catch(function (err) {});\n        return _objectSpread(_objectSpread({}, notification), {}, {\n          isRead: true\n        });\n      }\n\n      return notification;\n    });\n    setNotificationList(originNotificationData);\n  };\n\n  useEffect(function () {\n    getNotificationList();\n  }, []);\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.background\n    },\n    children: loading ? _jsx(Loading, {}) : _jsx(VirtualizedList, {\n      data: notificationList,\n      maxToRenderPerBatch: 10,\n      updateCellsBatchingPeriod: 50,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(TouchableOpacity, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingHorizontal: 8,\n            paddingVertical: 8,\n            borderBottomWidth: 0.4,\n            borderBottomColor: \"#999\",\n            backgroundColor: !(item != null && item.isRead) ? \"#f1f1f1\" : COLORS.background\n          },\n          onPress: function onPress() {\n            return !(item != null && item.isRead) && pressNotificationDetail(item == null ? void 0 : item.id);\n          },\n          children: [_jsx(ImageBackground, {\n            style: {\n              flex: 0.8\n            },\n            children: _jsx(Image, {\n              source: {\n                uri: item == null ? void 0 : item.thumbnail\n              },\n              style: {\n                height: 50,\n                width: 50,\n                borderRadius: 25\n              }\n            })\n          }), _jsxs(View, {\n            style: {\n              flex: 4,\n              paddingStart: 4,\n              paddingEnd: 6\n            },\n            children: [_jsxs(Text, {\n              style: {\n                fontFamily: FONTS.regular,\n                fontSize: 13,\n                flexWrap: \"wrap\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontFamily: FONTS.medium,\n                  fontSize: 13\n                },\n                children: item == null ? void 0 : item.sender\n              }), \" \" + (item == null ? void 0 : item.message)]\n            }), _jsx(Text, {\n              style: {\n                paddingTop: 4,\n                fontFamily: FONTS.regular,\n                color: COLORS.primary,\n                fontSize: 12\n              },\n              children: diffBetweenDate(item == null ? void 0 : item.createdAt)\n            })]\n          }), !(item != null && item.isRead) && _jsx(View, {\n            style: {\n              flex: 0.14,\n              height: 10,\n              borderRadius: 5,\n              backgroundColor: COLORS.primary\n            }\n          })]\n        }, item == null ? void 0 : item.id);\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return item == null ? void 0 : item.id;\n      },\n      getItemCount: function getItemCount(notificationList) {\n        return notificationList == null ? void 0 : notificationList.length;\n      },\n      getItem: function getItem(notification, index) {\n        return notification[index];\n      },\n      showsVerticalScrollIndicator: false,\n      bounces: false,\n      scrollEventThrottle: 16,\n      ListEmptyComponent: _jsx(View, {\n        style: {\n          paddingVertical: 240,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: _jsx(NoDataSVG, {\n          height: 80,\n          width: 80\n        })\n      })\n    })\n  });\n}\n\nexport default Notification;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","COLORS","FONTS","diffBetweenDate","getNotifications","readNotification","NoDataSVG","Loading","Notification","props","navigation","route","notificationList","setNotificationList","loading","setLoading","getNotificationList","isMounted","getItem","then","userInfoData","userInfo","JSON","parse","username","res","data","pressNotificationDetail","notificationId","dataReq","originNotificationData","map","notification","id","catch","err","isRead","flex","backgroundColor","background","item","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingVertical","borderBottomWidth","borderBottomColor","uri","thumbnail","height","width","borderRadius","paddingStart","paddingEnd","fontFamily","regular","fontSize","flexWrap","medium","sender","message","paddingTop","color","primary","createdAt","index","length"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/screens/notification/Notification.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport {\n  VirtualizedList,\n  View,\n  ImageBackground,\n  Image,\n  Text,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport { COLORS, FONTS } from \"../../constants\";\nimport { diffBetweenDate } from \"../../utils/date-util\";\nimport { getNotifications, readNotification } from \"../../api/socket\";\n\nimport NoDataSVG from \"../../assets/svg/no-data/no-data.svg\";\nimport Loading from \"../../components/loading/Loading\";\nfunction Notification(props) {\n  const { navigation, route } = props;\n  const [notificationList, setNotificationList] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getNotificationList = async () => {\n    let isMounted = true;\n    await AsyncStorage.getItem(\"userInfo\").then((userInfoData) => {\n      if (isMounted) {\n        let userInfo = JSON.parse(userInfoData);\n        setLoading(true);\n        getNotifications(userInfo?.username).then((res) => {\n          setNotificationList(res?.data?.notificationList);\n          setLoading(false);\n        });\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  };\n\n  const pressNotificationDetail = (notificationId) => {\n    let dataReq = {\n      notificationId: notificationId,\n    };\n    let originNotificationData = notificationList.map((notification) => {\n      if (notificationId === notification?.id) {\n        readNotification(dataReq)\n          .then((res) => {})\n          .catch((err) => {});\n        return { ...notification, isRead: true };\n      }\n      return notification;\n    });\n    setNotificationList(originNotificationData);\n  };\n\n  useEffect(() => {\n    getNotificationList();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, backgroundColor: COLORS.background }}>\n      {loading ? (\n        <Loading />\n      ) : (\n        <VirtualizedList\n          data={notificationList}\n          maxToRenderPerBatch={10}\n          updateCellsBatchingPeriod={50}\n          renderItem={({ item }) => (\n            <TouchableOpacity\n              key={item?.id}\n              style={{\n                flex: 1,\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                paddingHorizontal: 8,\n                paddingVertical: 8,\n                borderBottomWidth: 0.4,\n                borderBottomColor: \"#999\",\n                backgroundColor: !item?.isRead ? \"#f1f1f1\" : COLORS.background,\n              }}\n              onPress={() => !item?.isRead && pressNotificationDetail(item?.id)}\n            >\n              <ImageBackground\n                style={{\n                  flex: 0.8,\n                }}\n              >\n                <Image\n                  source={{ uri: item?.thumbnail }}\n                  style={{\n                    height: 50,\n                    width: 50,\n                    borderRadius: 25,\n                  }}\n                />\n              </ImageBackground>\n              <View style={{ flex: 4, paddingStart: 4, paddingEnd: 6 }}>\n                <Text\n                  style={{\n                    fontFamily: FONTS.regular,\n                    fontSize: 13,\n                    flexWrap: \"wrap\",\n                  }}\n                >\n                  <Text style={{ fontFamily: FONTS.medium, fontSize: 13 }}>\n                    {item?.sender}\n                  </Text>\n                  {` ${item?.message}`}\n                </Text>\n                <Text\n                  style={{\n                    paddingTop: 4,\n                    fontFamily: FONTS.regular,\n                    color: COLORS.primary,\n                    fontSize: 12,\n                  }}\n                >\n                  {diffBetweenDate(item?.createdAt)}\n                </Text>\n              </View>\n              {!item?.isRead && (\n                <View\n                  style={{\n                    flex: 0.14,\n                    height: 10,\n                    borderRadius: 5,\n                    backgroundColor: COLORS.primary,\n                  }}\n                />\n              )}\n            </TouchableOpacity>\n          )}\n          keyExtractor={(item, index) => item?.id}\n          getItemCount={(notificationList) => notificationList?.length}\n          getItem={(notification, index) => notification[index]}\n          showsVerticalScrollIndicator={false}\n          bounces={false}\n          scrollEventThrottle={16}\n          ListEmptyComponent={\n            <View\n              style={{\n                paddingVertical: 240,\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <NoDataSVG height={80} width={80} />\n            </View>\n          }\n        />\n      )}\n    </View>\n  );\n}\n\nexport default Notification;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
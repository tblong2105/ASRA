{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"children\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAmbientTRenderEngine = useAmbientTRenderEngine;\nexports.default = TRenderEngineProvider;\nexports.defaultTRenderEngineProviderProps = exports.defaultFallbackFonts = exports.tRenderEngineProviderPropTypes = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _useTRenderEngine = _interopRequireDefault(require(\"./hooks/useTRenderEngine\"));\n\nvar _defaultSystemFonts = _interopRequireDefault(require(\"./defaultSystemFonts\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultTRenderEngine = {};\n\nvar TRenderEngineContext = _react.default.createContext(defaultTRenderEngine);\n\nvar tRenderEngineProviderPropTypes = {\n  customHTMLElementModels: _propTypes.default.object.isRequired,\n  enableCSSInlineProcessing: _propTypes.default.bool,\n  enableUserAgentStyles: _propTypes.default.bool,\n  idsStyles: _propTypes.default.object,\n  ignoredDomTags: _propTypes.default.array,\n  ignoreDomNode: _propTypes.default.func,\n  domVisitors: _propTypes.default.object,\n  ignoredStyles: _propTypes.default.array.isRequired,\n  allowedStyles: _propTypes.default.array,\n  htmlParserOptions: _propTypes.default.object,\n  tagsStyles: _propTypes.default.object,\n  classesStyles: _propTypes.default.object,\n  emSize: _propTypes.default.number.isRequired,\n  baseStyle: _propTypes.default.object,\n  systemFonts: _propTypes.default.arrayOf(_propTypes.default.string),\n  fallbackFonts: _propTypes.default.shape({\n    serif: _propTypes.default.string,\n    'sans-serif': _propTypes.default.string,\n    monospace: _propTypes.default.string\n  }),\n  setMarkersForTNode: _propTypes.default.func,\n  dangerouslyDisableHoisting: _propTypes.default.bool,\n  dangerouslyDisableWhitespaceCollapsing: _propTypes.default.bool,\n  selectDomRoot: _propTypes.default.func\n};\nexports.tRenderEngineProviderPropTypes = tRenderEngineProviderPropTypes;\nvar defaultFallbackFonts = {\n  'sans-serif': _reactNative.Platform.select({\n    ios: 'system',\n    default: 'sans-serif'\n  }),\n  monospace: _reactNative.Platform.select({\n    ios: 'Menlo',\n    default: 'monospace'\n  }),\n  serif: _reactNative.Platform.select({\n    ios: 'Times New Roman',\n    default: 'serif'\n  })\n};\nexports.defaultFallbackFonts = defaultFallbackFonts;\nvar defaultTRenderEngineProviderProps = {\n  htmlParserOptions: {\n    decodeEntities: true\n  },\n  emSize: 14,\n  ignoredDomTags: [],\n  ignoredStyles: [],\n  baseStyle: {\n    fontSize: 14\n  },\n  tagsStyles: {},\n  classesStyles: {},\n  enableUserAgentStyles: true,\n  enableCSSInlineProcessing: true,\n  customHTMLElementModels: {},\n  fallbackFonts: defaultFallbackFonts,\n  systemFonts: _defaultSystemFonts.default\n};\nexports.defaultTRenderEngineProviderProps = defaultTRenderEngineProviderProps;\n\nfunction useAmbientTRenderEngine() {\n  var engine = _react.default.useContext(TRenderEngineContext);\n\n  if (typeof __DEV__ === 'boolean' && __DEV__ && engine === defaultTRenderEngine) {\n    console.error('TRenderEngineProvider is missing in the render tree.');\n  }\n\n  return engine;\n}\n\nfunction TRenderEngineProvider(_ref) {\n  var children = _ref.children,\n      config = _objectWithoutProperties(_ref, _excluded);\n\n  var engine = (0, _useTRenderEngine.default)(config);\n  return _react.default.createElement(TRenderEngineContext.Provider, {\n    value: engine\n  }, children);\n}\n\nTRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;\nTRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;","map":{"version":3,"sources":["TRenderEngineProvider.tsx"],"names":["defaultTRenderEngine","TRenderEngineContext","React","tRenderEngineProviderPropTypes","customHTMLElementModels","PropTypes","enableCSSInlineProcessing","enableUserAgentStyles","idsStyles","ignoredDomTags","ignoreDomNode","domVisitors","ignoredStyles","allowedStyles","htmlParserOptions","tagsStyles","classesStyles","emSize","baseStyle","systemFonts","fallbackFonts","serif","monospace","string","setMarkersForTNode","dangerouslyDisableHoisting","dangerouslyDisableWhitespaceCollapsing","selectDomRoot","func","defaultFallbackFonts","ios","default","defaultTRenderEngineProviderProps","decodeEntities","fontSize","defaultSystemFonts","engine","console","config","TRenderEngineProvider"],"mappings":"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","sourcesContent":["import TRenderEngine from '@native-html/transient-render-engine';\nimport React, { PropsWithChildren, ReactElement } from 'react';\nimport { Platform } from 'react-native';\nimport PropTypes from 'prop-types';\nimport useTRenderEngine from './hooks/useTRenderEngine';\nimport { TRenderEngineConfig } from './shared-types';\nimport defaultSystemFonts from './defaultSystemFonts';\n\nconst defaultTRenderEngine = {} as any;\n\nconst TRenderEngineContext =\n  React.createContext<TRenderEngine>(defaultTRenderEngine);\n\nexport const tRenderEngineProviderPropTypes: Record<\n  keyof TRenderEngineConfig,\n  any\n> = {\n  customHTMLElementModels: PropTypes.object.isRequired,\n  enableCSSInlineProcessing: PropTypes.bool,\n  enableUserAgentStyles: PropTypes.bool,\n  idsStyles: PropTypes.object,\n  ignoredDomTags: PropTypes.array,\n  ignoreDomNode: PropTypes.func,\n  domVisitors: PropTypes.object,\n  ignoredStyles: PropTypes.array.isRequired,\n  allowedStyles: PropTypes.array,\n  htmlParserOptions: PropTypes.object,\n  tagsStyles: PropTypes.object,\n  classesStyles: PropTypes.object,\n  emSize: PropTypes.number.isRequired,\n  baseStyle: PropTypes.object,\n  systemFonts: PropTypes.arrayOf(PropTypes.string),\n  fallbackFonts: PropTypes.shape({\n    serif: PropTypes.string,\n    'sans-serif': PropTypes.string,\n    monospace: PropTypes.string\n  }),\n  setMarkersForTNode: PropTypes.func,\n  dangerouslyDisableHoisting: PropTypes.bool,\n  dangerouslyDisableWhitespaceCollapsing: PropTypes.bool,\n  selectDomRoot: PropTypes.func\n};\n\n/**\n * Default fallback font for special keys such as 'sans-serif', 'monospace',\n * 'serif', based on current platform.\n */\nexport const defaultFallbackFonts = {\n  'sans-serif': Platform.select({ ios: 'system', default: 'sans-serif' }),\n  monospace: Platform.select({ ios: 'Menlo', default: 'monospace' }),\n  serif: Platform.select({ ios: 'Times New Roman', default: 'serif' })\n};\n\nexport const defaultTRenderEngineProviderProps: TRenderEngineConfig = {\n  htmlParserOptions: {\n    decodeEntities: true\n  },\n  emSize: 14,\n  ignoredDomTags: [],\n  ignoredStyles: [],\n  baseStyle: { fontSize: 14 },\n  tagsStyles: {},\n  classesStyles: {},\n  enableUserAgentStyles: true,\n  enableCSSInlineProcessing: true,\n  customHTMLElementModels: {},\n  fallbackFonts: defaultFallbackFonts,\n  systemFonts: defaultSystemFonts\n};\n\n/**\n * Use the ambient transient render engine.\n *\n * @returns The ambient transient render engine.\n *\n * @public\n */\nexport function useAmbientTRenderEngine() {\n  const engine = React.useContext(TRenderEngineContext);\n  if (\n    typeof __DEV__ === 'boolean' &&\n    __DEV__ &&\n    engine === defaultTRenderEngine\n  ) {\n    console.error('TRenderEngineProvider is missing in the render tree.');\n  }\n  return engine;\n}\n\n/**\n * A react component to share a {@link TRenderEngine} instance across different\n * rendered contents via {@link RenderHTMLSource}. This can significantly enhance\n * performance in applications with potentially dozens or hundreds of distinct\n * rendered snippets such as chat apps.\n *\n * @param props - Pass engine config here.\n */\nexport default function TRenderEngineProvider({\n  children,\n  ...config\n}: PropsWithChildren<TRenderEngineConfig>): ReactElement {\n  const engine = useTRenderEngine(config);\n  return (\n    <TRenderEngineContext.Provider value={engine}>\n      {children}\n    </TRenderEngineContext.Provider>\n  );\n}\n\n/**\n * @ignore\n */\nTRenderEngineProvider.defaultProps = defaultTRenderEngineProviderProps;\n\n/**\n * @ignore\n */\nTRenderEngineProvider.propTypes = tRenderEngineProviderPropTypes;\n"]},"metadata":{},"sourceType":"script"}
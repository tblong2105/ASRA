{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useTTree;\n\nvar _react = require(\"react\");\n\nvar _ttreeEventsContext = _interopRequireDefault(require(\"../context/ttreeEventsContext\"));\n\nvar _SharedPropsProvider = require(\"../context/SharedPropsProvider\");\n\nvar _TRenderEngineProvider = require(\"../TRenderEngineProvider\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useTTreeChangeEffect(ttree) {\n  var _ref = (0, _react.useContext)(_ttreeEventsContext.default),\n      onTTreeChange = _ref.onTTreeChange;\n\n  var _ref2 = (0, _SharedPropsProvider.useSharedProps)(),\n      debug = _ref2.debug;\n\n  var updateNumber = (0, _react.useRef)(0);\n  (0, _react.useEffect)(function () {\n    onTTreeChange === null || onTTreeChange === void 0 ? void 0 : onTTreeChange.call(null, ttree);\n\n    if (debug && typeof __DEV__ === 'boolean' && __DEV__) {\n      console.info(\"Transient Render Tree update \" + ++updateNumber.current + \":\\n\" + ttree.snapshot({\n        withNodeIndex: false,\n        withStyles: false\n      }));\n    }\n  }, [ttree, onTTreeChange, debug]);\n}\n\nfunction useTTree(props) {\n  var document = props.document;\n  var trenderEngine = (0, _TRenderEngineProvider.useAmbientTRenderEngine)();\n  var ttree = (0, _react.useMemo)(function () {\n    return typeof document === 'string' ? trenderEngine.buildTTree(document) : trenderEngine.buildTTreeFromDoc(document);\n  }, [document, trenderEngine]);\n  useTTreeChangeEffect(ttree);\n  return ttree;\n}","map":{"version":3,"sources":["useTTree.ts"],"names":["onTTreeChange","ttreeEventsContext","debug","updateNumber","console","current","withNodeIndex","withStyles","document","trenderEngine","ttree","useTTreeChangeEffect"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,iCAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,kCAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,4BAAA;;;;;;;;AAGA,SAAA,oBAAA,CAAA,KAAA,EAAgD;EAC9C,WAA0B,CAAA,GAAA,MAAA,CAAA,UAAA,EAAWC,mBAAAA,CAArC,OAA0B,CAA1B;EAAA,IAAQD,aAAR,QAAQA,aAAR;;EACA,YAAkB,CAAA,GAAA,oBAAA,CAAlB,cAAkB,GAAlB;EAAA,IAAQE,KAAR,SAAQA,KAAR;;EACA,IAAMC,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,MAAA,EAArB,CAAqB,CAArB;EACA,CAAA,GAAA,MAAA,CAAA,SAAA,EAAU,YAAM;IACdH,aAAa,KAAbA,IAAAA,IAAAA,aAAa,KAAA,KAAbA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAa,CAAbA,IAAAA,CAAAA,IAAAA,EAAAA,KAAAA,CAAAA;;IACA,IAAIE,KAAK,IAAI,OAAA,OAAA,KAATA,SAAAA,IAAJ,OAAA,EAAsD;MACpDE,OAAO,CAAPA,IAAAA,mCACkC,EAAED,YAAY,CAACE,OADjDD,WAC8D,KAAK,CAAL,QAAA,CAC1D;QACEE,aAAa,EADf,KAAA;QAEEC,UAAU,EAAE;MAFd,CAD0D,CAD9DH;IAQD;EAXH,CAAA,EAYG,CAAA,KAAA,EAAA,aAAA,EAZH,KAYG,CAZH;AAaD;;AAKc,SAAA,QAAA,CAAA,KAAA,EAA2C;EACxD,IAAQI,QAAR,GAAA,KAAA,CAAQA,QAAR;EACA,IAAMC,aAAa,GAAG,CAAA,GAAA,sBAAA,CAAtB,uBAAsB,GAAtB;EACA,IAAMC,KAAK,GAAG,CAAA,GAAA,MAAA,CAAA,OAAA,EACZ;IAAA,OACE,OAAA,QAAA,KAAA,QAAA,GACID,aAAa,CAAbA,UAAAA,CADJ,QACIA,CADJ,GAEIA,aAAa,CAAbA,iBAAAA,CAJM,QAINA,CAHN;EAAA,CADY,EAKZ,CAAA,QAAA,EALF,aAKE,CALY,CAAd;EAOAE,oBAAoB,CAApBA,KAAoB,CAApBA;EACA,OAAA,KAAA;AACD","sourcesContent":["import { useMemo, useEffect, useRef, useContext } from 'react';\nimport ttreeEventsContext from '../context/ttreeEventsContext';\nimport { useSharedProps } from '../context/SharedPropsProvider';\nimport { RenderTTreeProps } from '../internal-types';\nimport { useAmbientTRenderEngine } from '../TRenderEngineProvider';\nimport { TDocument } from '@native-html/transient-render-engine';\n\nfunction useTTreeChangeEffect(ttree: TDocument) {\n  const { onTTreeChange } = useContext(ttreeEventsContext);\n  const { debug } = useSharedProps();\n  const updateNumber = useRef(0);\n  useEffect(() => {\n    onTTreeChange?.call(null, ttree);\n    if (debug && typeof __DEV__ === 'boolean' && __DEV__) {\n      console.info(\n        `Transient Render Tree update ${++updateNumber.current}:\\n${ttree.snapshot(\n          {\n            withNodeIndex: false,\n            withStyles: false\n          }\n        )}`\n      );\n    }\n  }, [ttree, onTTreeChange, debug]);\n}\n\n/**\n * @internal\n */\nexport default function useTTree(props: RenderTTreeProps) {\n  const { document } = props;\n  const trenderEngine = useAmbientTRenderEngine();\n  const ttree = useMemo(\n    () =>\n      typeof document === 'string'\n        ? trenderEngine.buildTTree(document)\n        : trenderEngine.buildTTreeFromDoc(document),\n    [document, trenderEngine]\n  );\n  useTTreeChangeEffect(ttree);\n  return ttree;\n}\n"]},"metadata":{},"sourceType":"script"}
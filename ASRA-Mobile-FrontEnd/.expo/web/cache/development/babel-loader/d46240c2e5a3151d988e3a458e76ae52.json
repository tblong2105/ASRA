{"ast":null,"code":"import React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar AnimatedHeader = function AnimatedHeader(props) {\n  var isBackgroundHeader = props.isBackgroundHeader,\n      animatedValue = props.animatedValue,\n      children = props.children;\n  var insets = useSafeAreaInsets();\n  var backgroundHeader = animatedValue.interpolate({\n    inputRange: [0, 140],\n    outputRange: [\"transparent\", \"#fff\"],\n    extrapolate: \"clamp\"\n  });\n  return _jsx(Animated.View, {\n    style: {\n      position: \"absolute\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingTop: insets.top,\n      top: 0,\n      left: 0,\n      right: 0,\n      zIndex: 10,\n      elevation: 1000,\n      height: 100,\n      backgroundColor: \"#fafafa\",\n      borderBottomColor: isBackgroundHeader && \"#ddd\",\n      borderBottomWidth: isBackgroundHeader && 1,\n      backgroundColor: backgroundHeader\n    },\n    children: children\n  });\n};\n\nexport default AnimatedHeader;","map":{"version":3,"names":["React","useSafeAreaInsets","AnimatedHeader","props","isBackgroundHeader","animatedValue","children","insets","backgroundHeader","interpolate","inputRange","outputRange","extrapolate","position","flexDirection","justifyContent","alignItems","paddingTop","top","left","right","zIndex","elevation","height","backgroundColor","borderBottomColor","borderBottomWidth"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/components/layout/animated-header/AnimatedHeader.jsx"],"sourcesContent":["import React from \"react\";\nimport { Animated } from \"react-native\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\nconst AnimatedHeader = (props) => {\n  const { isBackgroundHeader, animatedValue, children } = props;\n  const insets = useSafeAreaInsets();\n  const backgroundHeader = animatedValue.interpolate({\n    inputRange: [0, 140],\n    outputRange: [\"transparent\", \"#fff\"],\n    extrapolate: \"clamp\",\n  });\n\n  return (\n    <Animated.View\n      style={{\n        position: \"absolute\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        paddingTop: insets.top,\n        top: 0,\n        left: 0,\n        right: 0,\n        zIndex: 10,\n        elevation: 1000,\n        height: 100,\n        backgroundColor: \"#fafafa\",\n        borderBottomColor: isBackgroundHeader && \"#ddd\",\n        borderBottomWidth: isBackgroundHeader && 1,\n        backgroundColor: backgroundHeader,\n      }}\n    >\n      {children}\n    </Animated.View>\n  );\n};\n\nexport default AnimatedHeader;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,IAAQC,kBAAR,GAAwDD,KAAxD,CAAQC,kBAAR;EAAA,IAA4BC,aAA5B,GAAwDF,KAAxD,CAA4BE,aAA5B;EAAA,IAA2CC,QAA3C,GAAwDH,KAAxD,CAA2CG,QAA3C;EACA,IAAMC,MAAM,GAAGN,iBAAiB,EAAhC;EACA,IAAMO,gBAAgB,GAAGH,aAAa,CAACI,WAAd,CAA0B;IACjDC,UAAU,EAAE,CAAC,CAAD,EAAI,GAAJ,CADqC;IAEjDC,WAAW,EAAE,CAAC,aAAD,EAAgB,MAAhB,CAFoC;IAGjDC,WAAW,EAAE;EAHoC,CAA1B,CAAzB;EAMA,OACE,KAAC,QAAD,CAAU,IAAV;IACE,KAAK,EAAE;MACLC,QAAQ,EAAE,UADL;MAELC,aAAa,EAAE,KAFV;MAGLC,cAAc,EAAE,eAHX;MAILC,UAAU,EAAE,QAJP;MAKLC,UAAU,EAAEV,MAAM,CAACW,GALd;MAMLA,GAAG,EAAE,CANA;MAOLC,IAAI,EAAE,CAPD;MAQLC,KAAK,EAAE,CARF;MASLC,MAAM,EAAE,EATH;MAULC,SAAS,EAAE,IAVN;MAWLC,MAAM,EAAE,GAXH;MAYLC,eAAe,EAAE,SAZZ;MAaLC,iBAAiB,EAAErB,kBAAkB,IAAI,MAbpC;MAcLsB,iBAAiB,EAAEtB,kBAAkB,IAAI,CAdpC;MAeLoB,eAAe,EAAEhB;IAfZ,CADT;IAAA,UAmBGF;EAnBH,EADF;AAuBD,CAhCD;;AAkCA,eAAeJ,cAAf"},"metadata":{},"sourceType":"module"}
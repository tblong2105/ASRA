{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultRenderError = defaultRenderError;\nexports.defaultRenderLoading = defaultRenderLoading;\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\n\nfunction defaultRenderError(source) {\n  return _react.default.createElement(_reactNative.View, {\n    testID: \"loader-error\",\n    style: styles.alignCenter\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.errorText\n  }, \"Failed to load HTML from \", source.uri));\n}\n\nfunction defaultRenderLoading() {\n  return _react.default.createElement(_reactNative.View, {\n    testID: \"loader-loading\",\n    style: styles.alignCenter\n  }, _react.default.createElement(_reactNative.ActivityIndicator, null));\n}\n\nvar sourceLoaderContext = _react.default.createContext({\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n});\n\nvar _default = sourceLoaderContext;\nexports.default = _default;","map":{"version":3,"sources":["sourceLoaderContext.tsx"],"names":["styles","alignCenter","flex","alignItems","justifyContent","errorText","fontStyle","fontSize","source","sourceLoaderContext","remoteErrorView","remoteLoadingView","defaultRenderLoading"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;;;;;;;AAIA,IAAMA,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;EAC/BC,WAAW,EAAE;IACXC,IAAI,EADO,CAAA;IAEXC,UAAU,EAFC,QAAA;IAGXC,cAAc,EAAE;EAHL,CADkB;EAM/BC,SAAS,EAAE;IACTC,SAAS,EADA,QAAA;IAETC,QAAQ,EAAE;EAFD;AANoB,CAAlB,CAAf;;AAYO,SAAA,kBAAA,CAAA,MAAA,EAAmD;EACxD,OACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;IAAM,MAAM,EAAZ,cAAA;IAA4B,KAAK,EAAEP,MAAM,CAACC;EAA1C,CAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;IAAM,KAAK,EAAED,MAAM,CAACK;EAApB,CAAA,EAAA,2BAAA,EAC4BG,MAAM,CAHtC,GAEI,CADF,CADF;AAOD;;AAEM,SAAA,oBAAA,GAAgC;EACrC,OACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,IAAA,EAAA;IAAM,MAAM,EAAZ,gBAAA;IAA8B,KAAK,EAAER,MAAM,CAACC;EAA5C,CAAA,EACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,iBAAA,EAFJ,IAEI,CADF,CADF;AAKD;;AAED,IAAMQ,mBAAmB,GAAG,MAAA,CAAA,OAAA,CAAA,aAAA,CAE1B;EACAC,eAAe,EADf,kBAAA;EAEAC,iBAAiB,EAAEC;AAFnB,CAF0B,CAA5B;;eAOeH,mB","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, StyleSheet, Text, View } from 'react-native';\nimport { RenderHTMLConfig, HTMLSourceUri } from '../shared-types';\n\nconst styles = StyleSheet.create({\n  alignCenter: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  errorText: {\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n});\n\nexport function defaultRenderError(source: HTMLSourceUri) {\n  return (\n    <View testID=\"loader-error\" style={styles.alignCenter}>\n      <Text style={styles.errorText}>\n        Failed to load HTML from {source.uri}\n      </Text>\n    </View>\n  );\n}\n\nexport function defaultRenderLoading() {\n  return (\n    <View testID=\"loader-loading\" style={styles.alignCenter}>\n      <ActivityIndicator />\n    </View>\n  );\n}\n\nconst sourceLoaderContext = React.createContext<\n  Pick<Required<RenderHTMLConfig>, 'remoteErrorView' | 'remoteLoadingView'>\n>({\n  remoteErrorView: defaultRenderError,\n  remoteLoadingView: defaultRenderLoading\n});\n\nexport default sourceLoaderContext;\n"]},"metadata":{},"sourceType":"script"}
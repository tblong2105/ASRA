{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef, useContext, useCallback } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as Device from \"expo-device\";\nimport * as Notifications from \"expo-notifications\";\nimport { SocketContext } from \"../../app/socket\";\nimport { NOTIFICATION_TYPE } from \"../../constants\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nNotifications.setNotificationHandler({\n  handleNotification: function handleNotification() {\n    return _regeneratorRuntime.async(function handleNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              shouldShowAlert: true,\n              shouldPlaySound: false,\n              shouldSetBadge: false\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport default function App() {\n  var socket = useContext(SocketContext);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      expoPushToken = _useState2[0],\n      setExpoPushToken = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notification = _useState4[0],\n      setNotification = _useState4[1];\n\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  var getNotification = useCallback(function _callee(data) {\n    var userInfo;\n    return _regeneratorRuntime.async(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = JSON;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n          case 3:\n            _context2.t1 = _context2.sent;\n            userInfo = _context2.t0.parse.call(_context2.t0, _context2.t1);\n\n            if (!((userInfo == null ? void 0 : userInfo.username) !== (data == null ? void 0 : data.senderName))) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(schedulePushNotification(data));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var addNewUserSocketServer = function _callee2() {\n    var userInfo;\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.t0 = JSON;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"userInfo\"));\n\n          case 3:\n            _context3.t1 = _context3.sent;\n            userInfo = _context3.t0.parse.call(_context3.t0, _context3.t1);\n            socket.emit(\"addNewUser\", userInfo == null ? void 0 : userInfo.username);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    addNewUserSocketServer();\n    socket.on(\"getNotification\", getNotification);\n    return function () {\n      socket.off(\"getNotification\", getNotification);\n    };\n  }, [socket, getNotification]);\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      setExpoPushToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      var _response$notificatio, _response$notificatio2, _response$notificatio3;\n\n      var notificationData = response == null ? void 0 : (_response$notificatio = response.notification) == null ? void 0 : (_response$notificatio2 = _response$notificatio.request) == null ? void 0 : (_response$notificatio3 = _response$notificatio2.content) == null ? void 0 : _response$notificatio3.data;\n      console.log(\"Data: \", notificationData);\n\n      if (notificationData != null && notificationData.contractId) {\n        navigation.navigate(\"PreviewContract\", {\n          contractId: notificationData == null ? void 0 : notificationData.contractId\n        });\n      }\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n  return _jsx(_Fragment, {});\n}\n\nvar notificationType = function notificationType(data) {\n  var type = \"\";\n\n  switch (true) {\n    case (data == null ? void 0 : data.type) === NOTIFICATION_TYPE.DEPOSIT:\n      type = \"Deposit\";\n      break;\n\n    case (data == null ? void 0 : data.type) === NOTIFICATION_TYPE.BECOME_INNKEEPER || (data == null ? void 0 : data.type) === NOTIFICATION_TYPE.ACCEPT_OR_REJECT:\n      type = \"Become Innkeeper\";\n      break;\n\n    case (data == null ? void 0 : data.type) === NOTIFICATION_TYPE.CREATE_CONTRACT:\n      type = \"Create Contract\";\n      break;\n\n    case (data == null ? void 0 : data.type) === NOTIFICATION_TYPE.SIGN_CONTRACT:\n      type = \"Sign Contract\";\n      break;\n\n    default:\n      break;\n  }\n\n  return type;\n};\n\nfunction schedulePushNotification(data) {\n  return _regeneratorRuntime.async(function schedulePushNotification$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(Notifications.scheduleNotificationAsync({\n            content: {\n              title: \"ASRA - \" + notificationType() + \" \\uD83D\\uDCEC\",\n              body: (data == null ? void 0 : data.senderName) + \" \" + (data == null ? void 0 : data.message),\n              data: {\n                contractId: data != null && data.contractId ? data == null ? void 0 : data.contractId : null\n              },\n              sound: \"../../assets/sound/notification-sound.wav\"\n            },\n            trigger: {\n              seconds: 2\n            }\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction registerForPushNotificationsAsync() {\n  var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n  return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (!Device.isDevice) {\n            _context5.next = 19;\n            break;\n          }\n\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n        case 3:\n          _await$Notifications$ = _context5.sent;\n          existingStatus = _await$Notifications$.status;\n          finalStatus = existingStatus;\n\n          if (!(existingStatus !== \"granted\")) {\n            _context5.next = 12;\n            break;\n          }\n\n          _context5.next = 9;\n          return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n        case 9:\n          _await$Notifications$2 = _context5.sent;\n          status = _await$Notifications$2.status;\n          finalStatus = status;\n\n        case 12:\n          if (!(finalStatus !== \"granted\")) {\n            _context5.next = 14;\n            break;\n          }\n\n          return _context5.abrupt(\"return\");\n\n        case 14:\n          _context5.next = 16;\n          return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n        case 16:\n          token = _context5.sent.data;\n          _context5.next = 19;\n          break;\n\n        case 19:\n          if (Platform.OS === \"android\") {\n            Notifications.setNotificationChannelAsync(\"default\", {\n              name: \"default\",\n              importance: Notifications.AndroidImportance.MAX,\n              vibrationPattern: [0, 250, 250, 250],\n              lightColor: \"#FF231F7C\"\n            });\n          }\n\n          return _context5.abrupt(\"return\", token);\n\n        case 21:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","useCallback","AsyncStorage","Device","Notifications","SocketContext","NOTIFICATION_TYPE","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","App","socket","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","responseListener","getNotification","data","JSON","getItem","userInfo","parse","username","senderName","schedulePushNotification","addNewUserSocketServer","emit","on","off","registerForPushNotificationsAsync","then","token","current","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","notificationData","request","content","console","log","contractId","navigation","navigate","removeNotificationSubscription","notificationType","type","DEPOSIT","BECOME_INNKEEPER","ACCEPT_OR_REJECT","CREATE_CONTRACT","SIGN_CONTRACT","scheduleNotificationAsync","title","body","message","sound","trigger","seconds","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","getExpoPushTokenAsync","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor"],"sources":["/Users/macbook/Documents/00.ASRA/ASRA-Mobile-FrontEnd/src/components/notification/Notification.jsx"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useCallback,\n} from \"react\";\nimport { Platform } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nimport * as Device from \"expo-device\";\nimport * as Notifications from \"expo-notifications\";\nimport { SocketContext } from \"../../app/socket\";\nimport { NOTIFICATION_TYPE } from \"../../constants\";\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nexport default function App() {\n  const socket = useContext(SocketContext);\n  const [expoPushToken, setExpoPushToken] = useState(\"\");\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  const getNotification = useCallback(async (data) => {\n    let userInfo = JSON.parse(await AsyncStorage.getItem(\"userInfo\"));\n    if (userInfo?.username !== data?.senderName) {\n      await schedulePushNotification(data);\n    }\n  }, []);\n\n  const addNewUserSocketServer = async () => {\n    let userInfo = JSON.parse(await AsyncStorage.getItem(\"userInfo\"));\n    socket.emit(\"addNewUser\", userInfo?.username);\n  };\n\n  useEffect(() => {\n    addNewUserSocketServer();\n    socket.on(\"getNotification\", getNotification);\n\n    return () => {\n      socket.off(\"getNotification\", getNotification);\n    };\n  }, [socket, getNotification]);\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then((token) => {\n      setExpoPushToken(token);\n    });\n\n    notificationListener.current =\n      Notifications.addNotificationReceivedListener((notification) => {\n        setNotification(notification);\n      });\n\n    responseListener.current =\n      Notifications.addNotificationResponseReceivedListener((response) => {\n        let notificationData = response?.notification?.request?.content?.data;\n        console.log(\"Data: \", notificationData);\n        if (notificationData?.contractId) {\n          navigation.navigate(\"PreviewContract\", {\n            contractId: notificationData?.contractId,\n          });\n        }\n      });\n\n    return () => {\n      Notifications.removeNotificationSubscription(\n        notificationListener.current\n      );\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n\n  return <></>;\n}\n\nconst notificationType = (data) => {\n  let type = \"\";\n  switch (true) {\n    case data?.type === NOTIFICATION_TYPE.DEPOSIT:\n      type = \"Deposit\";\n      break;\n    case data?.type === NOTIFICATION_TYPE.BECOME_INNKEEPER ||\n      data?.type === NOTIFICATION_TYPE.ACCEPT_OR_REJECT:\n      type = \"Become Innkeeper\";\n      break;\n    case data?.type === NOTIFICATION_TYPE.CREATE_CONTRACT:\n      type = \"Create Contract\";\n      break;\n    case data?.type === NOTIFICATION_TYPE.SIGN_CONTRACT:\n      type = \"Sign Contract\";\n      break;\n    default:\n      break;\n  }\n  return type;\n};\n\nasync function schedulePushNotification(data) {\n  await Notifications.scheduleNotificationAsync({\n    content: {\n      title: `ASRA - ${notificationType()} 📬`,\n      body: `${data?.senderName} ${data?.message}`,\n      data: { contractId: data?.contractId ? data?.contractId : null },\n      sound: \"../../assets/sound/notification-sound.wav\",\n    },\n    trigger: { seconds: 2 },\n  });\n}\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n  if (Device.isDevice) {\n    const { status: existingStatus } =\n      await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n  } else {\n  }\n\n  if (Platform.OS === \"android\") {\n    Notifications.setNotificationChannelAsync(\"default\", {\n      name: \"default\",\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: \"#FF231F7C\",\n    });\n  }\n\n  return token;\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,WALF,QAMO,OANP;;AAQA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,SAASC,aAAT;AACA,SAASC,iBAAT;;;AAEAF,aAAa,CAACG,sBAAd,CAAqC;EACnCC,kBAAkB,EAAE;IAAA;MAAA;QAAA;UAAA;YAAA,iCAAa;cAC/BC,eAAe,EAAE,IADc;cAE/BC,eAAe,EAAE,KAFc;cAG/BC,cAAc,EAAE;YAHe,CAAb;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;AADe,CAArC;AAQA,eAAe,SAASC,GAAT,GAAe;EAC5B,IAAMC,MAAM,GAAGb,UAAU,CAACK,aAAD,CAAzB;;EACA,gBAA0CR,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOiB,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,iBAAwClB,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOmB,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMC,oBAAoB,GAAGnB,MAAM,EAAnC;EACA,IAAMoB,gBAAgB,GAAGpB,MAAM,EAA/B;EAEA,IAAMqB,eAAe,GAAGnB,WAAW,CAAC,iBAAOoB,IAAP;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,eACnBC,IADmB;YAAA;YAAA,iCACFpB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CADE;;UAAA;YAAA;YAC9BC,QAD8B,gBACdC,KADc;;YAAA,MAE9B,CAAAD,QAAQ,QAAR,YAAAA,QAAQ,CAAEE,QAAV,OAAuBL,IAAvB,oBAAuBA,IAAI,CAAEM,UAA7B,CAF8B;cAAA;cAAA;YAAA;;YAAA;YAAA,iCAG1BC,wBAAwB,CAACP,IAAD,CAHE;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAD,EAKhC,EALgC,CAAnC;;EAOA,IAAMQ,sBAAsB,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,eACdP,IADc;YAAA;YAAA,iCACGpB,YAAY,CAACqB,OAAb,CAAqB,UAArB,CADH;;UAAA;YAAA;YACzBC,QADyB,gBACTC,KADS;YAE7BZ,MAAM,CAACiB,IAAP,CAAY,YAAZ,EAA0BN,QAA1B,oBAA0BA,QAAQ,CAAEE,QAApC;;UAF6B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA/B;;EAKA5B,SAAS,CAAC,YAAM;IACd+B,sBAAsB;IACtBhB,MAAM,CAACkB,EAAP,CAAU,iBAAV,EAA6BX,eAA7B;IAEA,OAAO,YAAM;MACXP,MAAM,CAACmB,GAAP,CAAW,iBAAX,EAA8BZ,eAA9B;IACD,CAFD;EAGD,CAPQ,EAON,CAACP,MAAD,EAASO,eAAT,CAPM,CAAT;EASAtB,SAAS,CAAC,YAAM;IACdmC,iCAAiC,GAAGC,IAApC,CAAyC,UAACC,KAAD,EAAW;MAClDpB,gBAAgB,CAACoB,KAAD,CAAhB;IACD,CAFD;IAIAjB,oBAAoB,CAACkB,OAArB,GACEhC,aAAa,CAACiC,+BAAd,CAA8C,UAACrB,YAAD,EAAkB;MAC9DC,eAAe,CAACD,YAAD,CAAf;IACD,CAFD,CADF;IAKAG,gBAAgB,CAACiB,OAAjB,GACEhC,aAAa,CAACkC,uCAAd,CAAsD,UAACC,QAAD,EAAc;MAAA;;MAClE,IAAIC,gBAAgB,GAAGD,QAAH,6CAAGA,QAAQ,CAAEvB,YAAb,+CAAG,sBAAwByB,OAA3B,+CAAG,uBAAiCC,OAApC,qBAAG,uBAA0CrB,IAAjE;MACAsB,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,gBAAtB;;MACA,IAAIA,gBAAJ,YAAIA,gBAAgB,CAAEK,UAAtB,EAAkC;QAChCC,UAAU,CAACC,QAAX,CAAoB,iBAApB,EAAuC;UACrCF,UAAU,EAAEL,gBAAF,oBAAEA,gBAAgB,CAAEK;QADO,CAAvC;MAGD;IACF,CARD,CADF;IAWA,OAAO,YAAM;MACXzC,aAAa,CAAC4C,8BAAd,CACE9B,oBAAoB,CAACkB,OADvB;MAGAhC,aAAa,CAAC4C,8BAAd,CAA6C7B,gBAAgB,CAACiB,OAA9D;IACD,CALD;EAMD,CA3BQ,EA2BN,EA3BM,CAAT;EA6BA,OAAO,mBAAP;AACD;;AAED,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC5B,IAAD,EAAU;EACjC,IAAI6B,IAAI,GAAG,EAAX;;EACA,QAAQ,IAAR;IACE,KAAK,CAAA7B,IAAI,QAAJ,YAAAA,IAAI,CAAE6B,IAAN,MAAe5C,iBAAiB,CAAC6C,OAAtC;MACED,IAAI,GAAG,SAAP;MACA;;IACF,KAAK,CAAA7B,IAAI,QAAJ,YAAAA,IAAI,CAAE6B,IAAN,MAAe5C,iBAAiB,CAAC8C,gBAAjC,IACH,CAAA/B,IAAI,QAAJ,YAAAA,IAAI,CAAE6B,IAAN,MAAe5C,iBAAiB,CAAC+C,gBADnC;MAEEH,IAAI,GAAG,kBAAP;MACA;;IACF,KAAK,CAAA7B,IAAI,QAAJ,YAAAA,IAAI,CAAE6B,IAAN,MAAe5C,iBAAiB,CAACgD,eAAtC;MACEJ,IAAI,GAAG,iBAAP;MACA;;IACF,KAAK,CAAA7B,IAAI,QAAJ,YAAAA,IAAI,CAAE6B,IAAN,MAAe5C,iBAAiB,CAACiD,aAAtC;MACEL,IAAI,GAAG,eAAP;MACA;;IACF;MACE;EAfJ;;EAiBA,OAAOA,IAAP;AACD,CApBD;;AAsBA,SAAetB,wBAAf,CAAwCP,IAAxC;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA,iCACQjB,aAAa,CAACoD,yBAAd,CAAwC;YAC5Cd,OAAO,EAAE;cACPe,KAAK,cAAYR,gBAAgB,EAA5B,kBADE;cAEPS,IAAI,GAAKrC,IAAL,oBAAKA,IAAI,CAAEM,UAAX,WAAyBN,IAAzB,oBAAyBA,IAAI,CAAEsC,OAA/B,CAFG;cAGPtC,IAAI,EAAE;gBAAEwB,UAAU,EAAExB,IAAI,QAAJ,IAAAA,IAAI,CAAEwB,UAAN,GAAmBxB,IAAnB,oBAAmBA,IAAI,CAAEwB,UAAzB,GAAsC;cAApD,CAHC;cAIPe,KAAK,EAAE;YAJA,CADmC;YAO5CC,OAAO,EAAE;cAAEC,OAAO,EAAE;YAAX;UAPmC,CAAxC,CADR;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAYA,SAAe7B,iCAAf;EAAA;;EAAA;IAAA;MAAA;QAAA;UAAA,KAEM9B,MAAM,CAAC4D,QAFb;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAIY3D,aAAa,CAAC4D,mBAAd,EAJZ;;QAAA;UAAA;UAGoBC,cAHpB,yBAGYC,MAHZ;UAKQC,WALR,GAKsBF,cALtB;;UAAA,MAMQA,cAAc,KAAK,SAN3B;YAAA;YAAA;UAAA;;UAAA;UAAA,iCAO+B7D,aAAa,CAACgE,uBAAd,EAP/B;;QAAA;UAAA;UAOcF,MAPd,0BAOcA,MAPd;UAQMC,WAAW,GAAGD,MAAd;;QARN;UAAA,MAUQC,WAAW,KAAK,SAVxB;YAAA;YAAA;UAAA;;UAAA;;QAAA;UAAA;UAAA,iCAamB/D,aAAa,CAACiE,qBAAd,EAbnB;;QAAA;UAaIlC,KAbJ,kBAa0Dd,IAb1D;UAAA;UAAA;;QAAA;UAiBE,IAAIiD,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;YAC7BnE,aAAa,CAACoE,2BAAd,CAA0C,SAA1C,EAAqD;cACnDC,IAAI,EAAE,SAD6C;cAEnDC,UAAU,EAAEtE,aAAa,CAACuE,iBAAd,CAAgCC,GAFO;cAGnDC,gBAAgB,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,GAAd,CAHiC;cAInDC,UAAU,EAAE;YAJuC,CAArD;UAMD;;UAxBH,kCA0BS3C,KA1BT;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}
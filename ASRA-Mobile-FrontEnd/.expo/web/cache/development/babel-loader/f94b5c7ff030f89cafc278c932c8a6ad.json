{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getCollapsedMarginTop;\n\nfunction getCollapsedMarginTop(precedent, current) {\n  var topMostMarginBottom = typeof precedent.styles.nativeBlockRet.marginBottom === 'number' ? precedent.styles.nativeBlockRet.marginBottom : null;\n  var bottomMostMarginTop = typeof current.styles.nativeBlockRet.marginTop === 'number' ? current.styles.nativeBlockRet.marginTop : null;\n\n  if (topMostMarginBottom == null || bottomMostMarginTop == null) {\n    return null;\n  }\n\n  if (topMostMarginBottom < 0 && bottomMostMarginTop < 0) {\n    return Math.min(topMostMarginBottom, bottomMostMarginTop) - topMostMarginBottom;\n  }\n\n  if (topMostMarginBottom < 0 || bottomMostMarginTop < 0) {\n    return topMostMarginBottom + bottomMostMarginTop - topMostMarginBottom;\n  }\n\n  if (topMostMarginBottom > bottomMostMarginTop) {\n    return 0;\n  }\n\n  return bottomMostMarginTop - topMostMarginBottom;\n}","map":{"version":3,"sources":["getCollapsedMarginTop.ts"],"names":["topMostMarginBottom","precedent","bottomMostMarginTop","current","Math"],"mappings":";;;;;;;AAYe,SAAA,qBAAA,CAAA,SAAA,EAAA,OAAA,EAGE;EACf,IAAMA,mBAAmB,GACvB,OAAOC,SAAS,CAATA,MAAAA,CAAAA,cAAAA,CAAP,YAAA,KAAA,QAAA,GACIA,SAAS,CAATA,MAAAA,CAAAA,cAAAA,CADJ,YAAA,GADF,IAAA;EAIA,IAAMC,mBAAmB,GACvB,OAAOC,OAAO,CAAPA,MAAAA,CAAAA,cAAAA,CAAP,SAAA,KAAA,QAAA,GACIA,OAAO,CAAPA,MAAAA,CAAAA,cAAAA,CADJ,SAAA,GADF,IAAA;;EAIA,IAAIH,mBAAmB,IAAnBA,IAAAA,IAA+BE,mBAAmB,IAAtD,IAAA,EAAgE;IAC9D,OAAA,IAAA;EACD;;EACD,IAAIF,mBAAmB,GAAnBA,CAAAA,IAA2BE,mBAAmB,GAAlD,CAAA,EAAwD;IACtD,OACEE,IAAI,CAAJA,GAAAA,CAAAA,mBAAAA,EAAAA,mBAAAA,IADF,mBAAA;EAGD;;EACD,IAAIJ,mBAAmB,GAAnBA,CAAAA,IAA2BE,mBAAmB,GAAlD,CAAA,EAAwD;IACtD,OAAOF,mBAAmB,GAAnBA,mBAAAA,GAAP,mBAAA;EACD;;EACD,IAAIA,mBAAmB,GAAvB,mBAAA,EAA+C;IAC7C,OAAA,CAAA;EACD;;EACD,OAAOE,mBAAmB,GAA1B,mBAAA;AACD","sourcesContent":["import { TNode } from '@native-html/transient-render-engine';\n\n/**\n * Compute a TNode top margin to satisfy requirements expressed in CSS\n * standard regarding margin collapsing.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing\n * for a reference.\n *\n * @param precedent - The node above the one for which we need to compute top margin.\n * @param current - The node for which a margin top might collapse.\n */\nexport default function getCollapsedMarginTop(\n  precedent: TNode,\n  current: TNode\n): null | number {\n  const topMostMarginBottom =\n    typeof precedent.styles.nativeBlockRet.marginBottom === 'number'\n      ? precedent.styles.nativeBlockRet.marginBottom\n      : null;\n  const bottomMostMarginTop =\n    typeof current.styles.nativeBlockRet.marginTop === 'number'\n      ? current.styles.nativeBlockRet.marginTop\n      : null;\n  if (topMostMarginBottom == null || bottomMostMarginTop == null) {\n    return null;\n  }\n  if (topMostMarginBottom < 0 && bottomMostMarginTop < 0) {\n    return (\n      Math.min(topMostMarginBottom, bottomMostMarginTop) - topMostMarginBottom\n    );\n  }\n  if (topMostMarginBottom < 0 || bottomMostMarginTop < 0) {\n    return topMostMarginBottom + bottomMostMarginTop - topMostMarginBottom;\n  }\n  if (topMostMarginBottom > bottomMostMarginTop) {\n    return 0;\n  }\n  return bottomMostMarginTop - topMostMarginBottom;\n}\n"]},"metadata":{},"sourceType":"script"}